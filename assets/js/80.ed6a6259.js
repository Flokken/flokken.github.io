(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{409:function(_,v,t){"use strict";t.r(v);var s=t(4),a=Object(s.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h2",{attrs:{id:"tcp-ip-网络模型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#tcp-ip-网络模型"}},[_._v("#")]),_._v(" TCP/IP 网络模型")]),_._v(" "),v("p",[v("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[v("mjx-math",{staticClass:"MJX-TEX"},[v("mjx-mi",{staticClass:"mjx-i"},[v("mjx-c",{attrs:{c:"Q"}})],1),v("mjx-mi",{staticClass:"mjx-i"},[v("mjx-c",{attrs:{c:"u"}})],1),v("mjx-mi",{staticClass:"mjx-i"},[v("mjx-c",{attrs:{c:"e"}})],1),v("mjx-mi",{staticClass:"mjx-i"},[v("mjx-c",{attrs:{c:"s"}})],1),v("mjx-mi",{staticClass:"mjx-i"},[v("mjx-c",{attrs:{c:"t"}})],1),v("mjx-mi",{staticClass:"mjx-i"},[v("mjx-c",{attrs:{c:"i"}})],1),v("mjx-mi",{staticClass:"mjx-i"},[v("mjx-c",{attrs:{c:"o"}})],1),v("mjx-mi",{staticClass:"mjx-i"},[v("mjx-c",{attrs:{c:"n"}})],1),v("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[v("mjx-utext",{staticStyle:{"font-family":"serif"},attrs:{variant:"normal"}},[_._v("：")])],1)],1)],1),_._v("网络模型有什么用?\n"),v("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[v("mjx-math",{staticClass:"MJX-TEX"},[v("mjx-mi",{staticClass:"mjx-i"},[v("mjx-c",{attrs:{c:"A"}})],1),v("mjx-mi",{staticClass:"mjx-i"},[v("mjx-c",{attrs:{c:"n"}})],1),v("mjx-mi",{staticClass:"mjx-i"},[v("mjx-c",{attrs:{c:"s"}})],1),v("mjx-mi",{staticClass:"mjx-i"},[v("mjx-c",{attrs:{c:"w"}})],1),v("mjx-mi",{staticClass:"mjx-i"},[v("mjx-c",{attrs:{c:"e"}})],1),v("mjx-mi",{staticClass:"mjx-i"},[v("mjx-c",{attrs:{c:"r"}})],1),v("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[v("mjx-c",{attrs:{c:":"}})],1)],1)],1),_._v("对于同一台设备上的进程间通信，有很多种方式，比如有管道、消息队列、共享内存、信号等方式，而对于不同设备上的进程间通信，就需要网络通信，"),v("strong",[_._v("而设备是多样性的，所以要兼容多种多样的设备")]),_._v("，就协商出了一套"),v("strong",[_._v("通用的网络协议")]),_._v("。")],1),_._v(" "),v("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost4@main/%E7%BD%91%E7%BB%9C/tcpip%E5%8F%82%E8%80%83%E6%A8%A1%E5%9E%8B.drawio.png",alt:"img"}}),_._v(" "),v("h3",{attrs:{id:"应用层"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#应用层"}},[_._v("#")]),_._v(" 应用层")]),_._v(" "),v("p",[_._v("最上层的，我们能直接接触到的就是"),v("strong",[_._v("应用层")]),_._v("（"),v("em",[_._v("Application Layer")]),_._v("），我们电脑或手机使用的应用软件都是在应用层实现。")]),_._v(" "),v("p",[_._v("不过，当两个不同设备的应用需要通信的时候，应用就把应用数据传给下一层，也就是传输层。")]),_._v(" "),v("p",[_._v("应用层只需要专注于为用户提供应用功能，"),v("strong",[_._v("比如 HTTP、FTP、Telnet、DNS、SMTP等。")])]),_._v(" "),v("p",[_._v("应用层是不用去关心数据是如何传输的，就类似于，我们寄快递的时候，只需要把包裹交给快递员，由他负责运输快递，我们不需要关心快递是如何被运输的。")]),_._v(" "),v("p",[_._v("而且"),v("strong",[_._v("应用层是工作在操作系统中的用户态，传输层及以下则工作在内核态。")])]),_._v(" "),v("h3",{attrs:{id:"传输层"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#传输层"}},[_._v("#")]),_._v(" 传输层")]),_._v(" "),v("p",[_._v("应用层的数据包会传给传输层，"),v("strong",[_._v("传输层")]),_._v("（"),v("em",[_._v("Transport Layer")]),_._v("）是为应用层"),v("strong",[_._v("提供网络支持")]),_._v("的。")]),_._v(" "),v("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost4@main/%E7%BD%91%E7%BB%9C/https/%E5%BA%94%E7%94%A8%E5%B1%82.png",alt:"img"}}),_._v(" "),v("p",[_._v("在传输层会有两个传输协议，分别是 TCP 和 UDP。")]),_._v(" "),v("p",[_._v("TCP 的全称叫传输控制协议（"),v("em",[_._v("Transmission Control Protocol")]),_._v("），大部分应用使用的正是 TCP 传输层协议，比如 HTTP 应用层协议。TCP 相比 UDP 多了很多特性，比如流量控制、超时重传、拥塞控制等，这些都是为了保证数据包能可靠地传输给对方。")]),_._v(" "),v("p",[_._v("UDP 相对来说就很简单，简单到只负责发送数据包，不保证数据包是否能抵达对方，但它实时性相对更好，传输效率也高。当然，UDP 也可以实现可靠传输，把 TCP 的特性在应用层上实现就可以，不过要实现一个商用的可靠 UDP 传输协议，也不是一件简单的事情。")]),_._v(" "),v("p",[_._v("应用需要传输的数据可能会非常大，如果直接传输就不好控制，因此当传输层的"),v("strong",[_._v("数据包大小超过 MSS")]),_._v("（TCP 最大报文段长度） ，就要将数据包**分块，**这样即使中途有一个分块丢失或损坏了，只需要重新发送这一个分块，而不用重新发送整个数据包。在 TCP 协议中，我们把每个分块称为一个 "),v("strong",[_._v("TCP 段")]),_._v("（"),v("em",[_._v("TCP Segment")]),_._v("）。")]),_._v(" "),v("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20240305212203246.png",alt:"image-20240305212203246"}}),_._v(" "),v("p",[v("strong",[_._v("端口")]),_._v(":当设备作为接收方时，传输层则要负责把数据包传给应用，但是一台设备上可能会有很多应用在接收或者传输数据，因此需要用一个编号将应用区分开来，这个编号就是"),v("strong",[_._v("端口")]),_._v("。")]),_._v(" "),v("blockquote",[v("p",[_._v("80 端口通常是 Web 服务器用的，22 端口通常是远程登录服务器用的")]),_._v(" "),v("p",[_._v("而对于浏览器（客户端）中的"),v("strong",[_._v("每个标签栏都是一个独立的进程，操作系统会为这些进程分配临时的端口号")]),_._v("。")])]),_._v(" "),v("p",[_._v("由于传输层的报文中会携带端口号，因此接收方可以识别出该报文是发送给哪个应用")]),_._v(" "),v("h3",{attrs:{id:"网络层"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#网络层"}},[_._v("#")]),_._v(" 网络层")]),_._v(" "),v("p",[v("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[v("mjx-math",{staticClass:"MJX-TEX"},[v("mjx-mi",{staticClass:"mjx-i"},[v("mjx-c",{attrs:{c:"Q"}})],1),v("mjx-mi",{staticClass:"mjx-i"},[v("mjx-c",{attrs:{c:"u"}})],1),v("mjx-mi",{staticClass:"mjx-i"},[v("mjx-c",{attrs:{c:"e"}})],1),v("mjx-mi",{staticClass:"mjx-i"},[v("mjx-c",{attrs:{c:"s"}})],1),v("mjx-mi",{staticClass:"mjx-i"},[v("mjx-c",{attrs:{c:"t"}})],1),v("mjx-mi",{staticClass:"mjx-i"},[v("mjx-c",{attrs:{c:"i"}})],1),v("mjx-mi",{staticClass:"mjx-i"},[v("mjx-c",{attrs:{c:"o"}})],1),v("mjx-mi",{staticClass:"mjx-i"},[v("mjx-c",{attrs:{c:"n"}})],1),v("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[v("mjx-utext",{staticStyle:{"font-family":"serif"},attrs:{variant:"normal"}},[_._v("：")])],1)],1)],1),_._v("应用层的数据包有传输层负责，那么它负责将数据从一个设备传输到另一个设备吗?")],1),_._v(" "),v("p",[_._v("Answer: "),v("strong",[_._v("并不是")])]),_._v(" "),v("p",[_._v("实际场景中的网络环节是错综复杂的，中间有各种各样的线路和分叉路口，如果一个设备的数据要传输给另一个设备，就需要在各种各样的路径和节点进行选择，而传输层的设计理念是简单、高效、专注，如果传输层还负责这一块功能就有点违背设计原则了。")]),_._v(" "),v("p",[_._v("也就是说，我们不希望传输层协议处理太多的事情，只需要服务好应用即可，让其作为应用间数据传输的媒介，帮助实现应用到应用的通信，"),v("strong",[_._v("而实际的传输功能就交给下一层")]),_._v("，也就是"),v("strong",[_._v("网络层")]),_._v("（"),v("em",[_._v("Internet Layer")]),_._v("）")]),_._v(" "),v("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20240305212536498.png",alt:"image-20240305212536498"}}),_._v(" "),v("h4",{attrs:{id:"ip"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#ip"}},[_._v("#")]),_._v(" IP")]),_._v(" "),v("p",[_._v("网络层最常使用的是 IP 协议（"),v("em",[_._v("Internet Protocol")]),_._v("），IP 协议会将传输层的报文作为数据部分，再加上 IP 包头组装成 IP 报文，如果 IP 报文大小超过 MTU（以太网中一般为 1500 字节）就会"),v("strong",[_._v("再次进行分片")]),_._v("，得到一个即将发送到网络的 IP 报文。")]),_._v(" "),v("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20240305214218179.png",alt:"image-20240305214218179"}}),_._v(" "),v("p",[_._v("IP地址的作用:网络层负责将数据从一个设备传输到另一个设备，而IP就是区分这个设备的编号")]),_._v(" "),v("p",[_._v("对于IPV4协议，32位，也有上忆的ip，寻址时依然麻烦。")]),_._v(" "),v("p",[_._v("所以IP地址两种意义:")]),_._v(" "),v("ul",[v("li",[_._v("一个是"),v("strong",[_._v("网络号")]),_._v("，负责标识该 IP 地址是属于哪个「子网」的；\n"),v("ul",[v("li",[_._v("IP地址与子网掩码做与运算得到")])])]),_._v(" "),v("li",[_._v("一个是"),v("strong",[_._v("主机号")]),_._v("，负责标识同一「子网」下的不同主机；\n"),v("ul",[v("li",[_._v("IP地址与取反的子网掩码做与运算得到")])])])]),_._v(" "),v("p",[v("strong",[_._v("寻址过程是先找同一子网，再去子网下找这个主机")])]),_._v(" "),v("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20240305214938627.png",alt:"image-20240305214938627"}}),_._v(" "),v("p",[v("strong",[_._v("子网掩码的简洁表示:")])]),_._v(" "),v("p",[_._v("比如 10.100.122.0/24，后面的"),v("code",[_._v("/24")]),_._v("表示就是 "),v("code",[_._v("255.255.255.0")]),_._v(" 子网掩码,因为每段8位，有24个1，所以是"),v("code",[_._v("/24")])]),_._v(" "),v("h4",{attrs:{id:"路由"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#路由"}},[_._v("#")]),_._v(" 路由")]),_._v(" "),v("p",[_._v("除了寻址能力， IP 协议还有另一个重要的能力就是"),v("strong",[_._v("路由")])]),_._v(" "),v("p",[_._v("实际场景中，两台设备并不是用一条网线连接起来的，而是通过很多网关、路由器、交换机等众多网络设备连接起来的，那么就会形成很多条网络的路径，因此当数据包到达一个网络节点，就需要通过路由算法决定下一步走哪条路径")]),_._v(" "),v("p",[_._v("路由器寻址工作中，就是要找到"),v("strong",[_._v("目标地址的子网")]),_._v("，找到后进而把数据包转发给对应的网络内。")]),_._v(" "),v("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20240305215228696.png",alt:"image-20240305215228696"}}),_._v(" "),v("p",[_._v("所以，"),v("strong",[_._v("IP 协议的寻址作用是告诉我们去往下一个目的地该朝哪个方向走，路由则是根据「下一个目的地」选择路径。寻址更像在导航，路由更像在操作方向盘")]),_._v("。")]),_._v(" "),v("h3",{attrs:{id:"网络接口层"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#网络接口层"}},[_._v("#")]),_._v(" 网络接口层")]),_._v(" "),v("p",[_._v("生成了 IP 头部之后，接下来要交给"),v("strong",[_._v("网络接口层")]),_._v("（"),v("em",[_._v("Link Layer")]),_._v("）在 IP 头部的前面加上 "),v("strong",[_._v("MAC 头部")]),_._v("，并封装成数据帧（Data frame）发送到网络上。")]),_._v(" "),v("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20240305215356581.png",alt:"image-20240305215356581"}}),_._v(" "),v("p",[_._v("IP 头部中的接收方 IP 地址表示网络包的目的地，"),v("strong",[_._v("通过这个地址我们就可以判断要将包发到哪里")]),_._v("。")]),_._v(" "),v("p",[_._v("但在以太网的世界中，这个思路是行不通的。")]),_._v(" "),v("p",[_._v("什么是以太网呢？电脑上的以太网接口，Wi-Fi接口，以太网交换机、路由器上的千兆，万兆以太网口，还有网线，它们都是以太网的组成部分。"),v("strong",[_._v("以太网就是一种在「局域网」内，把附近的设备连接起来，使它们之间可以进行通讯的技术")]),_._v("。")]),_._v(" "),v("p",[_._v("以太网在判断网络包目的地时和 IP 的方式不同，因此必须采用相匹配的方式才能在以太网中将包发往目的地（具体哪个设备），而 "),v("strong",[_._v("MAC 头部就是干这个用的")]),_._v("，所以，在以太网进行通讯要用到 "),v("strong",[_._v("MAC 地址")]),_._v("。")]),_._v(" "),v("h3",{attrs:{id:"总结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[_._v("#")]),_._v(" 总结")]),_._v(" "),v("p",[_._v("TCP/IP 网络通常是由上到下分成 4 层，分别是"),v("strong",[_._v("应用层，传输层，网络层和网络接口层")]),_._v("。")]),_._v(" "),v("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20240305215821570.png",alt:"image-20240305215821570"}}),_._v(" "),v("p",[_._v("对于我们从应用层的数据，也是一级级封装下去")]),_._v(" "),v("p",[_._v("其中，网络接口层的传输单位是帧（frame），IP 层的传输单位是包（packet），TCP 层的传输单位是段（segment），HTTP 的传输单位则是消息或报文（message）。但这些名词并没有什么本质的区分，可以统称为"),v("strong",[_._v("数据包")]),_._v("。")]),_._v(" "),v("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20240305215859775.png",alt:"image-20240305215859775"}}),_._v(" "),v("h2",{attrs:{id:"键入网址到网页显示-发生了什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#键入网址到网页显示-发生了什么"}},[_._v("#")]),_._v(" 键入网址到网页显示，发生了什么?")]),_._v(" "),v("p",[_._v("接下来以下图较简单的网络拓扑模型作为例子，探究探究其间发生了什么？")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20240307213111728.png",alt:"image-20240307213111728"}})]),_._v(" "),v("h3",{attrs:{id:"http"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[_._v("#")]),_._v(" HTTP")]),_._v(" "),v("blockquote",[v("p",[_._v("浏览器做的第一步工作是解析 URL")])]),_._v(" "),v("p",[_._v("首先浏览器做的第一步工作就是要对 "),v("code",[_._v("URL")]),_._v(" 进行解析，从而生成发送给 "),v("code",[_._v("Web")]),_._v(" 服务器的请求信息。")]),_._v(" "),v("p",[_._v("让我们看看一条长长的 URL 里的各个元素的代表什么，见下图：")]),_._v(" "),v("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/3.jpg",alt:"URL 解析"}}),_._v(" "),v("p",[_._v("所以图中的长长的 URL 实际上是请求服务器里的文件资源。")]),_._v(" "),v("blockquote",[v("p",[_._v("要是上图中的蓝色部分 URL 元素都省略了，那应该是请求哪个文件呢？")])]),_._v(" "),v("p",[_._v("当没有路径名时，就代表访问根目录下事先设置的"),v("strong",[_._v("默认文件")]),_._v("，也就是 "),v("code",[_._v("/index.html")]),_._v(" 或者 "),v("code",[_._v("/default.html")]),_._v(" 这些文件，这样就不会发生混乱了。")]),_._v(" "),v("blockquote",[v("p",[_._v("生产 HTTP 请求信息")])]),_._v(" "),v("p",[_._v("对 "),v("code",[_._v("URL")]),_._v(" 进行解析之后，浏览器确定了 Web 服务器和文件名，接下来就是根据这些信息来生成 HTTP 请求消息了。")]),_._v(" "),v("blockquote",[v("p",[_._v("这里感觉直接来个案例更好理解")]),_._v(" "),v("p",[_._v("比如访问 http://google.com 和http://8.8.8.8一样的（好像google是这个ip）")]),_._v(" "),v("ul",[v("li",[_._v("8.8.8.8就是google服务器的ip")]),_._v(" "),v("li",[_._v("由于没有加文件目录，所以这里就是直接访问了google搜索的搜索首页")])])]),_._v(" "),v("h3",{attrs:{id:"解析域名-dns"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#解析域名-dns"}},[_._v("#")]),_._v(" 解析域名-DNS")]),_._v(" "),v("p",[_._v("通过浏览器解析 URL 并生成 HTTP 消息后，需要委托操作系统将消息发送给 "),v("code",[_._v("Web")]),_._v(" 服务器。")]),_._v(" "),v("p",[_._v("但在发送之前，还有一项工作需要完成，那就是"),v("strong",[_._v("查询服务器域名对应的 IP 地址")]),_._v("，因为委托操作系统发送消息时，必须提供通信对象的 IP 地址。")]),_._v(" "),v("p",[v("strong",[_._v("DNS服务器")]),_._v("：专门保存了 "),v("code",[_._v("Web")]),_._v(" 服务器域名与 "),v("code",[_._v("IP")]),_._v(" 的对应关系，它就是 "),v("code",[_._v("DNS")]),_._v(" 服务器。")]),_._v(" "),v("blockquote",[v("p",[_._v("域名的层级关系")])]),_._v(" "),v("p",[_._v("DNS 中的域名都是用"),v("strong",[_._v("句点")]),_._v("来分隔的，比如 "),v("code",[_._v("www.server.com")]),_._v("，这里的句点代表了不同层次之间的"),v("strong",[_._v("界限")]),_._v("。")]),_._v(" "),v("p",[_._v("在域名中，"),v("strong",[_._v("越靠右")]),_._v("的位置表示其层级"),v("strong",[_._v("越高")]),_._v("。")]),_._v(" "),v("p",[_._v("毕竟域名是外国人发明，所以思维和中国人相反，比如说一个城市地点的时候，外国喜欢"),v("strong",[_._v("从小到大的方式")]),_._v("顺序说起（如 XX 街道 XX 区 XX 市 XX 省），而中国则喜欢从大到小的顺序（如 XX 省 XX 市 XX 区 XX 街道）。")]),_._v(" "),v("p",[_._v("实际上域名最后还有一个点，比如 "),v("code",[_._v("www.server.com.")]),_._v("，这个最后的一个点代表根域名。")]),_._v(" "),v("p",[_._v("也就是，"),v("code",[_._v(".")]),_._v(" 根域是在最顶层，它的下一层就是 "),v("code",[_._v(".com")]),_._v(" 顶级域，再下面是 "),v("code",[_._v("server.com")]),_._v("。")]),_._v(" "),v("p",[_._v("所以域名的层级关系类似一个树状结构：")]),_._v(" "),v("ul",[v("li",[_._v("根 DNS 服务器（.）")]),_._v(" "),v("li",[_._v("顶级域 DNS 服务器（.com）")]),_._v(" "),v("li",[_._v("权威 DNS 服务器（server.com）")])]),_._v(" "),v("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20240307213601380.png",alt:"image-20240307213601380"}}),_._v(" "),v("h3",{attrs:{id:"协议栈"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#协议栈"}},[_._v("#")]),_._v(" 协议栈")]),_._v(" "),v("p",[_._v("通过 DNS 获取到 IP 后，下一步把 "),v("strong",[_._v("HTTP 的传输工作")]),_._v("交给操作系统中的"),v("strong",[_._v("协议栈")]),_._v("。")]),_._v(" "),v("p",[_._v("协议栈的内部分为几个部分，分别承担不同的工作。上下关系是有一定的规则的，"),v("strong",[_._v("上面的部分会向下面的部分委托工作，下面的部分收到委托的工作并执行")])]),_._v(" "),v("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/7.jpg",alt:"img"}}),_._v(" "),v("p",[_._v("应用程序（浏览器）"),v("strong",[_._v("通过调用 Socket 库，来委托协议栈工作")]),_._v("。协议栈的上半部分有两块，分别是负责收发数据的 TCP 和 UDP 协议，这两个传输协议会接受应用层的委托执行收发数据的操作。")]),_._v(" "),v("p",[_._v("协议栈的下面一半是用 IP 协议控制网络包收发操作，在互联网上传数据时，数据会被切分成一块块的网络包，而将网络包发送给对方的操作就是由 IP 负责的。")]),_._v(" "),v("p",[_._v("此外 IP 中还包括 "),v("code",[_._v("ICMP")]),_._v(" 协议和 "),v("code",[_._v("ARP")]),_._v(" 协议。")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("ICMP")]),_._v(" 用于告知网络包传送过程中产生的错误以及各种控制信息。")]),_._v(" "),v("li",[v("code",[_._v("ARP")]),_._v(" 用于根据 IP 地址查询相应的以太网 MAC 地址。")])]),_._v(" "),v("p",[_._v("IP 下面的"),v("strong",[_._v("网卡驱动程序负责控制网卡硬件")]),_._v("，而"),v("strong",[_._v("最下面的网卡则负责完成实际的收发操作")]),_._v("，也就是对网线中的信号执行发送和接收操作。")]),_._v(" "),v("h4",{attrs:{id:"socket是什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#socket是什么"}},[_._v("#")]),_._v(" Socket是什么?")]),_._v(" "),v("blockquote",[v("p",[v("a",{attrs:{href:"https://www.51cto.com/article/750179.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("socket详解"),v("OutboundLink")],1)])]),_._v(" "),v("p",[_._v("socket(套接字，原意是电源插座)本质是编程接口(API)，对TCP/IP的封装，TCP/IP也要提供可供程序员做网络开发所用的接口，这就是"),v("strong",[_._v("Socket编程接口")]),_._v("。")]),_._v(" "),v("p",[_._v("Socket 封装了基本的"),v("strong",[_._v("通信")]),_._v("功能，"),v("strong",[_._v("是 TCP/IP 协议的基本操作单元")]),_._v("。")]),_._v(" "),v("h3",{attrs:{id:"可靠传输tcp"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#可靠传输tcp"}},[_._v("#")]),_._v(" 可靠传输TCP")]),_._v(" "),v("p",[_._v("HTTP 是基于 TCP 协议传输的，所以在这我们先了解下 TCP 协议。")]),_._v(" "),v("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/8.jpg",alt:"TCP 包头格式"}}),_._v(" "),v("p",[_._v("首先，"),v("strong",[_._v("源端口号")]),_._v("和"),v("strong",[_._v("目标端口")]),_._v("号是不可少的，如果没有这两个端口号，数据就不知道应该发给哪个应用。")]),_._v(" "),v("p",[_._v("接下来有包的"),v("strong",[_._v("序")]),_._v("号，这个是为了解决包乱序的问题。此外还有窗口大小等等......")]),_._v(" "),v("h4",{attrs:{id:"三次握手"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三次握手"}},[_._v("#")]),_._v(" 三次握手")]),_._v(" "),v("p",[_._v("在 HTTP 传输数据之前，首先需要 TCP 建立连接，TCP 连接的建立，通常称为"),v("strong",[_._v("三次握手")]),_._v("。")]),_._v(" "),v("p",[_._v("这个所谓的「连接」，只是双方计算机里维护一个状态机，在连接建立的过程中，双方的状态变化时序图就像这样。")]),_._v(" "),v("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20240310220509824.png",alt:"image-20240310220509824"}}),_._v(" "),v("ul",[v("li",[_._v("一开始，客户端和服务端都处于 "),v("code",[_._v("CLOSED")]),_._v(" 状态。先是服务端主动监听某个端口，处于 "),v("code",[_._v("LISTEN")]),_._v(" 状态。")]),_._v(" "),v("li",[_._v("然后客户端主动发起连接 "),v("code",[_._v("SYN")]),_._v("，之后处于 "),v("code",[_._v("SYN-SENT")]),_._v(" 状态。\n"),v("ul",[v("li",[_._v("SeqNum=client_isn就是一个数字，用于确认包的（每一次的client_isn是"),v("strong",[_._v("随机")]),_._v("的，为了区分不同的包/连接）\n"),v("ul",[v("li",[_._v("客户端希望收到的回复Ack是这个SeqNum=client_isn+1")])])])])]),_._v(" "),v("li",[_._v("服务端收到发起的连接，返回 "),v("code",[_._v("SYN")]),_._v("，并且 "),v("code",[_._v("ACK")]),_._v(" 客户端的 "),v("code",[_._v("SYN")]),_._v("，之后处于 "),v("code",[_._v("SYN-RCVD")]),_._v(" 状态。\n"),v("ul",[v("li",[_._v("AckNum就是直接把SeqNum加一")]),_._v(" "),v("li",[_._v("服务端也要发送一个SeqSum=server_isn("),v("strong",[_._v("每一次的server_in也是随机的")]),_._v(")")]),_._v(" "),v("li",[_._v("服务端希望收到的回复Ack是这个SeqNum=server_isn+1")])])]),_._v(" "),v("li",[_._v("客户端收到服务端发送的 "),v("code",[_._v("SYN")]),_._v(" 和 "),v("code",[_._v("ACK")]),_._v(" 之后，发送对 "),v("code",[_._v("SYN")]),_._v(" 确认的 "),v("code",[_._v("ACK")]),_._v("，之后处于 "),v("code",[_._v("ESTABLISHED")]),_._v(" 状态，因为它"),v("strong",[_._v("一发一收")]),_._v("成功了。\n"),v("ul",[v("li",[_._v("客户端对比服务端返回的AckNUm来确定收到的是自己刚刚发出去那个（因为就是自己发出去的数字加一）")])])]),_._v(" "),v("li",[_._v("服务端收到 "),v("code",[_._v("ACK")]),_._v(" 的 "),v("code",[_._v("ACK")]),_._v(" 之后，处于 "),v("code",[_._v("ESTABLISHED")]),_._v(" 状态，因为它也"),v("strong",[_._v("一发一收")]),_._v("了。\n"),v("ul",[v("li",[_._v("服务端一样的也要对比客户端发回的Ack是否符合自己的数字+1（确定是一个连接的）")])])])]),_._v(" "),v("p",[_._v("三次握手的目的是"),v("strong",[_._v("保证双方都有发送和接受的能力")])]),_._v(" "),v("blockquote",[v("p",[_._v("但是更主要的原因是防止历史连接")])]),_._v(" "),v("p",[_._v("TCP 的连接状态查看，在 Linux 可以通过 "),v("code",[_._v("netstat -napt")]),_._v(" 命令查看。")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20240310221311967.png",alt:"image-20240310221311967"}})]),_._v(" "),v("p",[_._v("，TCP 四元组可以唯一的确定一个连接，四元组包括如下：")]),_._v(" "),v("ul",[v("li",[_._v("目的 IP 地址")]),_._v(" "),v("li",[_._v("目的端口")]),_._v(" "),v("li",[_._v("源 IP 地址")]),_._v(" "),v("li",[_._v("源端口")])]),_._v(" "),v("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/331f4012969d4e4e11b716fd8c7bbed3a770f2.png",alt:"图片"}}),_._v(" "),v("h3",{attrs:{id:"远程ip"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#远程ip"}},[_._v("#")]),_._v(" 远程IP")]),_._v(" "),v("p",[_._v("TCP 模块在执行连接、收发、断开等各阶段操作时，都需要委托 IP 模块将数据封装成"),v("strong",[_._v("网络包")]),_._v("发送给通信对象。")]),_._v(" "),v("p",[_._v("IP协议头部比较长，这里 最关键的就是"),v("strong",[_._v("源地址 IP")]),_._v(" 和 "),v("strong",[_._v("目标地址 IP")]),_._v("：")]),_._v(" "),v("ul",[v("li",[_._v("源地址IP，即是客户端输出的 IP 地址；")]),_._v(" "),v("li",[_._v("目标地址，即通过 DNS 域名解析得到的 Web 服务器 IP。")])]),_._v(" "),v("p",[_._v("因为 HTTP 是经过 TCP 传输的，所以在 IP 包头的"),v("strong",[_._v("协议号")]),_._v("，要填写为 "),v("code",[_._v("06")]),_._v("（十六进制），表示协议为 TCP。")]),_._v(" "),v("blockquote",[v("p",[_._v("还有标志位，长度片偏移等等。。。。")])]),_._v(" "),v("h4",{attrs:{id:"路由表"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#路由表"}},[_._v("#")]),_._v(" 路由表")]),_._v(" "),v("p",[_._v("Q:假设客户端有多个网卡，就会有多个 IP 地址，那 IP 头部的源地址应该选择哪个 IP 呢？")]),_._v(" "),v("blockquote",[v("p",[_._v("当存在多个网卡时，在填写源地址 IP 时，就需要判断到底应该填写哪个地址。这个判断相当于在多块网卡中判断应该使用哪个一块网卡来发送包。")])]),_._v(" "),v("p",[_._v("这个时候就需要根据"),v("strong",[_._v("路由表")]),_._v("规则，来判断哪一个网卡作为源地址 IP。")]),_._v(" "),v("p",[_._v("在 Linux 操作系统，我们可以使用 "),v("code",[_._v("route -n")]),_._v(" 命令查看当前系统的路由表。")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/15.jpg",alt:"路由表"}})]),_._v(" "),v("p",[_._v("我们假设 Web 服务器的目标地址是 "),v("code",[_._v("192.168.10.200")]),_._v("。")]),_._v(" "),v("ol",[v("li",[_._v("首先先和第一条目的子网掩码（"),v("code",[_._v("Genmask")]),_._v("）进行 "),v("strong",[_._v("与运算")]),_._v("，得到结果为 "),v("code",[_._v("192.168.10.0")]),_._v("，但是第一个条目的 "),v("code",[_._v("Destination")]),_._v(" 是 "),v("code",[_._v("192.168.3.0")]),_._v("，两者不一致所以匹配失败。")]),_._v(" "),v("li",[_._v("再与第二条目的子网掩码进行 "),v("strong",[_._v("与运算")]),_._v("，得到的结果为 "),v("code",[_._v("192.168.10.0")]),_._v("，与第二条目的 "),v("code",[_._v("Destination 192.168.10.0")]),_._v(" 匹配成功，所以将使用 "),v("code",[_._v("eth1")]),_._v(" 网卡的 IP 地址作为 IP 包头的源地址。")])]),_._v(" "),v("p",[_._v("如果假设 Web 服务器的目标地址是 "),v("code",[_._v("10.100.20.100")]),_._v("，那么依然依照上面的路由表规则判断，判断后的结果是和第三条目匹配。")]),_._v(" "),v("p",[_._v("第三条目比较特殊，它目标地址和子网掩码都是 "),v("code",[_._v("0.0.0.0")]),_._v("，这表示"),v("strong",[_._v("默认网关")]),_._v("，如果其他所有条目都无法匹配，就会自动匹配这一行。并且后续就把包发给路由器，"),v("code",[_._v("Gateway")]),_._v(" 即是路由器的 IP 地址。")]),_._v(" "),v("h3",{attrs:{id:"两点传输-mac"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#两点传输-mac"}},[_._v("#")]),_._v(" 两点传输-MAC")]),_._v(" "),v("p",[_._v("生成了 IP 头部之后，接下来网络包还需要在 IP 头部的前面加上 "),v("strong",[_._v("MAC 头部")]),_._v("。")]),_._v(" "),v("p",[_._v("在 MAC 包头里需要"),v("strong",[_._v("发送方 MAC 地址")]),_._v("和"),v("strong",[_._v("接收方目标 MAC 地址")]),_._v("，用于"),v("strong",[_._v("两点之间的传输")]),_._v("。")]),_._v(" "),v("p",[_._v("一般在 TCP/IP 通信里，MAC 包头的"),v("strong",[_._v("协议类型")]),_._v("只使用：")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("0800")]),_._v(" ： IP 协议")]),_._v(" "),v("li",[v("code",[_._v("0806")]),_._v(" ： ARP 协议")])]),_._v(" "),v("p",[v("strong",[_._v("发送方")]),_._v("的 MAC 地址获取就比较简单了，MAC 地址是在网卡生产时写入到 ROM 里的，只要将这个值读取出来写入到 MAC 头部就可以了。")]),_._v(" "),v("p",[v("strong",[_._v("接收方")]),_._v("的 MAC 地址就有点复杂了，只要告诉以太网对方的 MAC 的地址，以太网就会帮我们把包发送过去，那么很显然这里应该填写对方的 MAC 地址。")]),_._v(" "),v("p",[_._v("Q:接受方IP?")]),_._v(" "),v("p",[_._v("这个只要查一下"),v("strong",[_._v("路由表")]),_._v("就知道了。在路由表中找到相匹配的条目，"),v("strong",[_._v("然后把包发给 "),v("code",[_._v("Gateway")]),_._v(" 列中的 IP 地址就可以了。")])]),_._v(" "),v("blockquote",[v("p",[_._v("网卡是插电脑，找到网卡其实就是找到电脑了")])]),_._v(" "),v("p",[_._v("Q:但是不知道接收方MAC地址。")]),_._v(" "),v("p",[_._v("此时就需要 "),v("code",[_._v("ARP")]),_._v(" 协议帮我们找到"),v("strong",[_._v("路由器的 MAC 地址。")])]),_._v(" "),v("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/19.jpg",alt:"ARP 广播"}}),_._v(" "),v("p",[_._v("ARP 协议会在以太网中以"),v("strong",[_._v("广播")]),_._v("的形式，对以太网所有的设备喊出：“这个 IP 地址是谁的？请把你的 MAC 地址告诉我”。")]),_._v(" "),v("p",[_._v("然后就会有人回答：“这个 IP 地址是我的，我的 MAC 地址是 XXXX”。")]),_._v(" "),v("p",[_._v("如果对方和自己处于同一个子网中，那么通过上面的操作就可以得到对方的 MAC 地址。然后，我们将这个 MAC 地址写入 MAC 头部，MAC 头部就完成了。")]),_._v(" "),v("blockquote",[v("p",[_._v("当然，每次广播很耗时，所以会有ARP缓存记录")])]),_._v(" "),v("p",[_._v("在 Linux 系统中，我们可以使用 "),v("code",[_._v("arp -a")]),_._v(" 命令来查看 ARP 缓存的内容。")]),_._v(" "),v("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20240310222800529.png",alt:"image-20240310222800529"}}),_._v(" "),v("h4",{attrs:{id:"网络包报文总览"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#网络包报文总览"}},[_._v("#")]),_._v(" 网络包报文总览")]),_._v(" "),v("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/21.jpg",alt:"MAC 层报文"}}),_._v(" "),v("h3",{attrs:{id:"出口-网卡"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#出口-网卡"}},[_._v("#")]),_._v(" 出口-网卡")]),_._v(" "),v("p",[_._v("网络包只是存放在内存中的一串二进制数字信息，没有办法直接发送给对方。因此，我们需要将"),v("strong",[_._v("数字信息转换为电信号")]),_._v("，才能在网线上传输，也就是说，这才是真正的数据发送过程。")]),_._v(" "),v("p",[_._v("负责执行这一操作的是"),v("strong",[_._v("网卡")]),_._v("，要控制网卡还需要靠"),v("strong",[_._v("网卡驱动程序")]),_._v("。")]),_._v(" "),v("p",[_._v("网卡驱动获取网络包之后，会将其"),v("strong",[_._v("复制")]),_._v("到网卡内的缓存区中，接着会在其"),v("strong",[_._v("开头加上报头和起始帧分界符，在末尾加上用于检测错误的帧校验序列")]),_._v("。")]),_._v(" "),v("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20240310223015449.png",alt:"image-20240310223015449"}}),_._v(" "),v("h3",{attrs:{id:"送别者-交换机"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#送别者-交换机"}},[_._v("#")]),_._v(" 送别者-交换机")]),_._v(" "),v("p",[_._v("交换机的设计是将网络包"),v("strong",[_._v("原样")]),_._v("转发到目的地。交换机工作在 MAC 层，也称为"),v("strong",[_._v("二层网络设备")]),_._v("。")]),_._v(" "),v("p",[_._v("计算机的网卡本身具有 MAC 地址，并通过核对收到的包的接收方 MAC 地址判断是不是发给自己的，如果不是发给自己的则丢弃；相对地，交换机的端口不核对接收方 MAC 地址，而是直接接收所有的包并存放到缓冲区中。")]),_._v(" "),v("p",[_._v("因此，和网卡不同，"),v("strong",[_._v("交换机的端口不具有 MAC 地址")]),_._v("。")]),_._v(" "),v("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20240310223254127.png",alt:"image-20240310223254127"}}),_._v(" "),v("p",[_._v("Q:交换机到底是什么?")]),_._v(" "),v("p",[_._v("交换机可以简单理解成一个设备，三台电脑网线接到这个设备，这三台电脑就可以互相通信了，交换机嘛，交换数据这么理解就可以。")]),_._v(" "),v("h3",{attrs:{id:"出境大门-路由器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#出境大门-路由器"}},[_._v("#")]),_._v(" 出境大门-路由器")]),_._v(" "),v("p",[v("strong",[_._v("路由器和交换机区别")])]),_._v(" "),v("p",[_._v("网络包经过交换机之后，现在到达了"),v("strong",[_._v("路由器")]),_._v("，并在此被转发到下一个路由器或目标设备。")]),_._v(" "),v("p",[_._v("这一步转发的工作原理和交换机类似，也是通过查表判断包转发的目标。")]),_._v(" "),v("p",[_._v("不过在具体的操作过程上，路由器和交换机是有区别的。")]),_._v(" "),v("ul",[v("li",[_._v("因为"),v("strong",[_._v("路由器")]),_._v("是基于 IP 设计的，俗称"),v("strong",[_._v("三层")]),_._v("网络设备，"),v("strong",[_._v("路由器的各个端口都具有 MAC 地址和 IP 地址")]),_._v("；")]),_._v(" "),v("li",[_._v("而"),v("strong",[_._v("交换机")]),_._v("是基于以太网设计的，俗称"),v("strong",[_._v("二层")]),_._v("网络设备，"),v("strong",[_._v("交换机的端口不具有 MAC 地址")]),_._v("。")])]),_._v(" "),v("p",[v("strong",[_._v("路由器是什么?")])]),_._v(" "),v("p",[_._v("路由器的端口具有 MAC 地址，因此它就能够成为以太网的发送方和接收方；同时还具有 IP 地址，从这个意义上来说，它和计算机的网卡是一样的。")]),_._v(" "),v("p",[_._v("当转发包时，首先路由器端口"),v("strong",[_._v("会接收发给自己的以太网包")]),_._v("，然后"),v("strong",[_._v("路由表")]),_._v("查询转发目标，再由相应的"),v("strong",[_._v("端口")]),_._v("作为发送方将以太网包发送出去。")]),_._v(" "),v("p",[v("strong",[_._v("路由器接受包的操作")])]),_._v(" "),v("p",[_._v("检验MAC 头部中的"),v("strong",[_._v("接收方 MAC 地址")]),_._v("，看看是不是发给自己的包，如果是就放到接收缓冲区中，否则就丢弃这个包")]),_._v(" "),v("blockquote",[v("p",[_._v("总的来说，路由器的端口都具有 MAC 地址，只接收与自身地址匹配的包，遇到不匹配的包则直接丢弃。")])]),_._v(" "),v("p",[v("strong",[_._v("查询路由表确定输出端口(转发到哪去)")])]),_._v(" "),v("p",[_._v("完成包接收操作之后，路由器就会"),v("strong",[_._v("去掉")]),_._v("包开头的 MAC 头部。")]),_._v(" "),v("blockquote",[v("p",[v("strong",[_._v("MAC 头部的作用就是将包送达路由器")]),_._v("，其中的接收方 MAC 地址就是路由器端口的 MAC 地址。因此，当包到达路由器之后，MAC 头部的任务就完成了，于是 MAC 头部就会"),v("strong",[_._v("被丢弃")]),_._v("。")])]),_._v(" "),v("p",[_._v("接下来，路由器会根据 MAC 头部后方的 "),v("code",[_._v("IP")]),_._v(" 头部中的内容进行包的转发操作。")]),_._v(" "),v("p",[_._v("转发操作分为几个阶段，首先是查询"),v("strong",[_._v("路由表")]),_._v("判断转发目标。")]),_._v(" "),v("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20240310224058364.png",alt:"image-20240310224058364"}}),_._v(" "),v("p",[_._v("假设地址为 "),v("code",[_._v("10.10.1.101")]),_._v(" 的计算机要向地址为 "),v("code",[_._v("192.168.1.100")]),_._v(" 的服务器发送一个包，这个包先到达图中的路由器。")]),_._v(" "),v("blockquote",[v("p",[_._v("路由器操作：每个条目的子网掩码和 "),v("code",[_._v("192.168.1.100")]),_._v(" IP 做 "),v("strong",[_._v("& 与运算")]),_._v("（其实也就是确定子网号的那个操作，所以叫子网掩码），比较是否和目标地址匹配")])]),_._v(" "),v("p",[_._v("第二条目的子网掩码 "),v("code",[_._v("255.255.255.0")]),_._v(" 与 "),v("code",[_._v("192.168.1.100")]),_._v(" IP 做 "),v("strong",[_._v("& 与运算")]),_._v("后，得到结果是 "),v("code",[_._v("192.168.1.0")]),_._v("，"),v("strong",[_._v("和其目标地址匹配")])]),_._v(" "),v("p",[_._v("所以第二条目记录就会被作为转发目标。")]),_._v(" "),v("blockquote",[v("p",[_._v("实在找不到匹配路由时，就会选择"),v("strong",[_._v("默认路由")]),_._v("，路由表中子网掩码为 "),v("code",[_._v("0.0.0.0")]),_._v(" 的记录表示「默认路由」。")])]),_._v(" "),v("p",[v("strong",[_._v("下面开始发送包")])]),_._v(" "),v("p",[_._v("我们需要根据"),v("strong",[_._v("路由表的网关列")]),_._v("判断对方的地址。")]),_._v(" "),v("blockquote",[v("p",[_._v("掩码子网为0.0.0.0的条目就是网关")])]),_._v(" "),v("p",[_._v("这里涉及到路由表如何判断"),v("strong",[_._v("是否达到终点")]),_._v("？")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("如果网关是一个 IP 地址")]),_._v("，则这个IP 地址就是我们要转发到的目标地址，"),v("strong",[_._v("还未抵达终点")]),_._v("，还需继续需要路由器转发。")]),_._v(" "),v("li",[v("strong",[_._v("如果网关为空")]),_._v("，则 IP 头部中的接收方 IP 地址就是要转发到的目标地址，也是就终于找到 IP 包头里的目标地址了，说明"),v("strong",[_._v("已抵达终点")]),_._v("。")])]),_._v(" "),v("p",[_._v("知道对方的 IP 地址之后，接下来需要通过 "),v("code",[_._v("ARP")]),_._v(" 协议根据 IP 地址查询 MAC 地址，并将查询的结果作为接收方 MAC 地址。")]),_._v(" "),v("blockquote",[v("p",[_._v("路由器也有 ARP 缓存，因此首先会在 ARP 缓存中查询，如果找不到则发送 ARP 查询请求。")])]),_._v(" "),v("p",[_._v("接下来是发送方 MAC 地址字段，这里填写输出端口的 MAC 地址。还有一个以太类型字段，填写 "),v("code",[_._v("0800")]),_._v(" （十六进制）表示 IP 协议。")]),_._v(" "),v("p",[_._v("网络包完成后，接下来会将其转换成电信号并通过端口发送出去。这一步的工作过程和计算机也是相同的。")]),_._v(" "),v("p",[_._v("发送出去的网络包会通过"),v("strong",[_._v("交换机")]),_._v("到达下一个路由器。由于接收方 MAC 地址就是下一个路由器的地址，所以交换机会根据这一地址将包传输到下一个路由器。")]),_._v(" "),v("p",[_._v("接下来，下一个路由器会将包转发给再下一个路由器，经过层层转发之后，网络包就到达了最终的目的地。")]),_._v(" "),v("p",[v("strong",[_._v("注意")]),_._v(":在网络包传输的过程中，"),v("strong",[_._v("源 IP 和目标 IP 始终是不会变的，一直变化的是 MAC 地址")]),_._v("，因为需要 MAC 地址在以太网内进行"),v("strong",[_._v("两个设备")]),_._v("之间的包传输。")]),_._v(" "),v("h3",{attrs:{id:"互相扒皮-服务器-与-客户端"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#互相扒皮-服务器-与-客户端"}},[_._v("#")]),_._v(" 互相扒皮 —— 服务器 与 客户端")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/25.jpg",alt:"网络分层模型"}})]),_._v(" "),v("h2",{attrs:{id:"linux收发网络"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#linux收发网络"}},[_._v("#")]),_._v(" Linux收发网络")]),_._v(" "),v("p",[_._v("这里只讨论一个问题:\tLinux如何收发网络包?")]),_._v(" "),v("p",[_._v("为了使得多种设备能通过网络相互通信，和为了解决各种不同设备在网络互联中的兼容性问题,所以才需要建立网络模型。")]),_._v(" "),v("p",[_._v("国际标准是OSI七层标准模型，但是太复杂，所以是理论上。")]),_._v(" "),v("p",[_._v("比较实用的是四层模型，即 TCP/IP 网络模型，"),v("strong",[_._v("Linux 系统")]),_._v("正是按照这套网络模型来实现"),v("strong",[_._v("网络协议栈")]),_._v("的。")]),_._v(" "),v("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20240311222614139.png",alt:"image-20240311222614139"}}),_._v(" "),v("blockquote",[v("p",[_._v("不过，我们常说的七层和四层负载均衡，是用 OSI 网络模型来描述的，七层对应的是应用层，四层对应的是传输层。")])]),_._v(" "),v("h3",{attrs:{id:"linux网络协议栈"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#linux网络协议栈"}},[_._v("#")]),_._v(" Linux网络协议栈")]),_._v(" "),v("p",[_._v("我们可以把自己的身体比作应用层中的数据，打底衣服比作传输层中的 TCP 头，外套比作网络层中 IP 头，帽子和鞋子分别比作网络接口层的帧头和帧尾。")]),_._v(" "),v("p",[_._v("复习一下，应用层数据在各层的包装格式")]),_._v(" "),v("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20240311224322914.png",alt:"image-20240311224322914"}}),_._v(" "),v("p",[_._v("其中：")]),_._v(" "),v("ul",[v("li",[_._v("传输层，给应用数据前面增加了 TCP 头；")]),_._v(" "),v("li",[_._v("网络层，给 TCP 数据包前面增加了 IP 头；")]),_._v(" "),v("li",[_._v("网络接口层，给 IP 数据包前后分别增加了帧头和帧尾；")])]),_._v(" "),v("p",[_._v("这些新增的头部和尾部，都有各自的作用，也都是按照特定的协议格式填充，这每一层都增加了各自的协议头，那自然网络包的大小就增大了。")]),_._v(" "),v("p",[_._v("但物理链路并不能传输任意大小的数据包，所以在以太网中，"),v("strong",[_._v("规定了最大传输单元")]),_._v("（MTU）是 "),v("code",[_._v("1500")]),_._v(" 字节，也就是规定了"),v("strong",[_._v("单次传输的最大 IP 包大小")]),_._v("。")]),_._v(" "),v("blockquote",[v("p",[_._v("当网络包超过 MTU 的大小，就会在网络层分片，以确保分片后的 IP 包不会超过 MTU 大小，如果 MTU 越小，需要的分包就越多，那么网络吞吐能力就越差，相反的，如果 MTU 越大，需要的分包就越少，那么网络吞吐能力就越好。")])]),_._v(" "),v("p",[_._v("Linux 网络协议栈其实就类似于 TCP/IP 的四层结构：")]),_._v(" "),v("p",[_._v("​")]),_._v(" "),v("p",[_._v("其中:")]),_._v(" "),v("ul",[v("li",[_._v("应用程序需要通过系统调用，来跟 Socket 层进行数据交互；\n"),v("ul",[v("li",[_._v("socket层其实就是一个库，通过这个库封装了基本的通信功能")])])]),_._v(" "),v("li",[_._v("Socket 层的下面就是传输层、网络层和网络接口层；")]),_._v(" "),v("li",[_._v("最下面的一层，则是网卡驱动程序和硬件网卡设备；")])]),_._v(" "),v("h3",{attrs:{id:"linux-接收网络包的流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#linux-接收网络包的流程"}},[_._v("#")]),_._v(" Linux 接收网络包的流程")]),_._v(" "),v("p",[v("strong",[_._v("网卡")]),_._v("是计算机里的一个硬件，专门负责接收和发送网络包，当网卡接收到一个网络包后，会通过 DMA 技术，将网络包写入到指定的内存地址，也就是写入到 Ring Buffer ，这个是一个环形缓冲区，接着就会告诉操作系统这个网络包已经到达。")]),_._v(" "),v("p",[v("strong",[_._v("那应该怎么告诉操作系统这个网络包已经到达了呢？")])]),_._v(" "),v("p",[_._v("最简单的一种方式就是触发中断，也就是每当网卡收到一个网络包，就触发一个中断告诉操作系统。")]),_._v(" "),v("blockquote",[v("p",[_._v("但是，这存在一个问题，在高性能网络场景下，网络包的数量会非常多，那么就会触发非常多的中断，要知道当 CPU 收到了中断，就会停下手里的事情，而去处理这些网络包，这样很占用CPU资源")])]),_._v(" "),v("p",[_._v("为了解决频繁中断带来的性能开销，Linux 内核在 2.6 版本中引入了 "),v("strong",[_._v("NAPI 机制")]),_._v("，它是混合「"),v("strong",[_._v("中断和轮询")]),_._v("」的方式来接收网络包，它的核心概念就是"),v("strong",[_._v("不采用中断的方式读取数据")]),_._v("，而是首先采用中断唤醒数据接收的服务程序，然后 "),v("code",[_._v("poll")]),_._v(" 的方法来轮询数据。")]),_._v(" "),v("p",[_._v("网卡发起中断给CPU也叫"),v("strong",[_._v("硬中断")]),_._v("，CPU执行硬中断后，之后还会发起"),v("strong",[_._v("软中断")]),_._v("。")]),_._v(" "),v("blockquote",[v("p",[_._v("硬件中断处理函数做的事情很少，主要耗时的工作都交给软中断处理函数了。")])]),_._v(" "),v("p",[_._v("内核中的 ksoftirqd 线程专门负责软中断的处理，当 ksoftirqd 内核线程收到软中断后，就会来轮询处理数据。")]),_._v(" "),v("p",[_._v("ksoftirqd 线程会从 Ring Buffer 中获取一个数据帧，用 sk_buff 表示，从而可以作为一个网络包交给网络协议栈进行逐层处理。")]),_._v(" "),v("h4",{attrs:{id:"网络协议栈处理网络包过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#网络协议栈处理网络包过程"}},[_._v("#")]),_._v(" 网络协议栈处理网络包过程")]),_._v(" "),v("p",[_._v("首先，会先进入到网络接口层，在这一层会检查报文的合法性，如果不合法则丢弃，合法则会找出该网络包的上层协议的类型，比如是 IPv4，还是 IPv6，接着再去掉帧头和帧尾，然后交给网络层。")]),_._v(" "),v("p",[_._v("到了网络层，则取出 IP 包，判断网络包下一步的走向，比如是"),v("strong",[_._v("交给上层处理还是转发出去")]),_._v("。当确认这个网络包要发送给"),v("strong",[_._v("本机")]),_._v("后，就会从 IP 头里看看上一层协议的类型是 TCP 还是 UDP，接着去掉 IP 头，然后交给传输层。")]),_._v(" "),v("p",[_._v("传输层取出 TCP 头或 UDP 头，根据"),v("strong",[_._v("四元组「源 IP、源端口、目的 IP、目的端口」 作为标识")]),_._v("，找出对应的 Socket，并把数据放到 "),v("strong",[_._v("Socket")]),_._v(" 的接收缓冲区。")]),_._v(" "),v("p",[_._v("最后，应用层程序调用 Socket 接口，将内核的 Socket 接收缓冲区的"),v("strong",[_._v("数据「拷贝」到应用层的缓冲区，"),v("strong",[_._v("然后")]),_._v("唤醒用户进程")]),_._v("。")]),_._v(" "),v("p",[_._v("下图左边是Linux接受网络包流程，右边是发送网络包流程")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20240311225643044.png",alt:"image-20240311225643044"}})]),_._v(" "),v("h3",{attrs:{id:"linux发送网络包"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#linux发送网络包"}},[_._v("#")]),_._v(" Linux发送网络包")]),_._v(" "),v("p",[_._v("如上图的右半部分，发送网络包的流程正好和接收流程相反。")]),_._v(" "),v("p",[_._v("首先，应用程序会调用 Socket 发送数据包的接口，由于这个是系统调用，所以会从用户态陷入到内核态中的 Socket 层，内核会申请一个内核态的 sk_buff 内存，"),v("strong",[_._v("将用户待发送的数据拷贝到 sk_buff 内存，并将其加入到发送缓冲区")]),_._v("。")]),_._v(" "),v("p",[_._v("接下来，"),v("strong",[_._v("网络协议栈")]),_._v("从 Socket 发送缓冲区中取出 sk_buff，并按照 TCP/IP 协议栈从上到下逐层处理。")]),_._v(" "),v("p",[_._v("如果使用的是 TCP 传输协议发送数据，那么"),v("strong",[_._v("先拷贝一个新的 sk_buff 副本")]),_._v(" ，这是因为 sk_buff 后续在调用网络层，最后到达网卡发送完成的时候，这个 sk_buff 会被释放掉。而 TCP 协议是支持丢失重传的，在收到对方的 ACK 之前，这个 sk_buff 不能被删除。所以内核的做法就是每次调用网卡发送的时候，实际上传递出去的是 "),v("strong",[_._v("sk_buff 的一个拷贝")]),_._v("，等"),v("strong",[_._v("收到 ACK")]),_._v(" 再真正删除。")]),_._v(" "),v("p",[_._v("接着，对 sk_buff 填充 TCP 头。")]),_._v(" "),v("p",[v("strong",[_._v("注意")]),_._v("：sk_buff 可以表示各个层的数据包，在应用层数据包叫 data，在 TCP 层我们称为 segment，在 IP 层我们叫 packet，在数据链路层称为 frame。")]),_._v(" "),v("blockquote",[v("p",[_._v("这里和规范里对各层数据包叫法一样")])]),_._v(" "),v("h3",{attrs:{id:"总结-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总结-2"}},[_._v("#")]),_._v(" 总结")]),_._v(" "),v("p",[_._v("电脑与电脑之间通常都是通过网卡、交换机、路由器等网络设备连接到一起，那由于"),v("strong",[_._v("网络设备的异构性")]),_._v("，国际标准化组织定义了一个七层的 OSI 网络模型，但是这个模型由于比较复杂，实际应用中并没有采用，而是采用了更为简化的 TCP/IP 模型，Linux 网络协议栈就是按照了该模型来实现的。")]),_._v(" "),v("p",[_._v("TCP/IP 模型主要分为应用层、传输层、网络层、网络接口层四层，每一层负责的职责都不同，这也是 Linux 网络协议栈主要构成部分。")]),_._v(" "),v("p",[_._v("当应用程序通过 Socket 接口发送数据包，数据包会被"),v("strong",[_._v("网络协议栈")]),_._v("从上到下进行逐层处理后，才会被送到网卡队列中，随后由网卡将网络包发送出去。")]),_._v(" "),v("p",[_._v("而在接收网络包时，同样也要先经过"),v("strong",[_._v("网络协议栈")]),_._v("从下到上的逐层处理，最后才会被送到应用程序。")])])}),[],!1,null,null,null);v.default=a.exports}}]);