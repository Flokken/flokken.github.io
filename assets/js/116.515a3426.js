(window.webpackJsonp=window.webpackJsonp||[]).push([[116],{445:function(s,o,v){"use strict";v.r(o);var e=v(4),_=Object(e.a)({},(function(){var s=this,o=s._self._c;return o("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[o("h1",{attrs:{id:"会话技术"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#会话技术"}},[s._v("#")]),s._v(" 会话技术")]),s._v(" "),o("h2",{attrs:{id:"会话是啥"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#会话是啥"}},[s._v("#")]),s._v(" 会话是啥？")]),s._v(" "),o("p",[o("strong",[s._v("会话:用户打开浏览器，访问web服务器的资源，会话建立，直到有一方断开连接，会话结束")]),s._v("。在一次会话中可以包含"),o("strong",[s._v("多次")]),s._v("请求和响应。")]),s._v(" "),o("p",[s._v("从浏览器发出请求到服务端响应数据给前端之后，一次会话(在浏览器和服务器之间)就被建立了。会话被建立后，如果浏览器或服务端都没有被关闭，则会话就会持续建立着浏览器和服务器就可以继续使用该会话进行请求发送和响应，上述的整个过程就被称之为"),o("strong",[s._v("会话")]),s._v("。")]),s._v(" "),o("p",[s._v("用实际场景来理解下会话，比如在我们访问京东的时候，当打开浏览器进入京东首页后，浏览器和京东的服务器之间就建立了一次会话，后面的搜索商品,查看商品的详情,加入购物车等都是在这一次会话中完成。")]),s._v(" "),o("p",[s._v("例如下图建立了三个会话（三个浏览器进程，每个都与服务器建立了一个会话）")]),s._v(" "),o("img",{staticStyle:{zoom:"70%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20230412134511892.png"}}),s._v(" "),o("p",[o("strong",[s._v("会话跟踪")]),s._v(":一种维护浏览器状态的方法，服务器需要识别多次请求是否来自于同一浏览器，以便在")]),s._v(" "),o("ul",[o("li",[s._v("同一次会话的多次请求间"),o("strong",[s._v("共享数据")]),s._v("。")]),s._v(" "),o("li",[s._v("服务器会收到多个请求，这多个请求可能来自多个浏览器，如上图中的6个请求来自3个浏览器")]),s._v(" "),o("li",[s._v("服务器需要用来识别请求是否来自同一个浏览器")]),s._v(" "),o("li",[s._v("服务器用来识别浏览器的过程，这个过程就是"),o("strong",[s._v("会话跟踪")])]),s._v(" "),o("li",[s._v("服务器识别浏览器后就可以在同一个会话中多次请求之间来共享数据")])]),s._v(" "),o("p",[s._v("比如在网站上进行了登录，点击记住密码，关闭这个标签，再打开，可以自动填充密码，就是数据共享。")]),s._v(" "),o("p",[o("strong",[s._v("Question：")])]),s._v(" "),o("p",[s._v("为什么现在浏览器和服务器不支持数据共享呢")]),s._v(" "),o("ul",[o("li",[s._v("浏览器和服务器之间使用的是HTTP请求来进行数据传输")]),s._v(" "),o("li",[s._v("HTTP协议是"),o("strong",[s._v("无状态")]),s._v("的，每次浏览器向服务器请求时，服务器都会将该请求视为"),o("strong",[s._v("新的")]),s._v("请求")]),s._v(" "),o("li",[s._v("HTTP协议设计成无状态的目的是让每次请求之间相互独立，互不影响")]),s._v(" "),o("li",[o("strong",[s._v("请求与请求之间独立后，就无法实现多次请求之间的数据共享")])])]),s._v(" "),o("h2",{attrs:{id:"客户端会话跟踪技术-cookie"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#客户端会话跟踪技术-cookie"}},[s._v("#")]),s._v(" 客户端会话跟踪技术："),o("strong",[s._v("Cookie")])]),s._v(" "),o("p",[s._v("cookie和session都可以实现会话跟踪技术")]),s._v(" "),o("p",[o("strong",[s._v("Cookie是存储在浏览器端而Session是存储在服务器端")])]),s._v(" "),o("h3",{attrs:{id:"cookie如何实现数据共享"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#cookie如何实现数据共享"}},[s._v("#")]),s._v(" cookie如何实现数据共享？")]),s._v(" "),o("img",{staticStyle:{zoom:"70%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20230412135633774.png"}}),s._v(" "),o("ul",[o("li",[s._v("服务端提供了两个Servlet，分别是ServletA和ServletB")]),s._v(" "),o("li",[s._v("浏览器发送HTTP请求1给服务端，服务端ServletA接收请求并进行业务处理")]),s._v(" "),o("li",[s._v("服务端ServletA在处理的过程中可以创建一个Cookie对象并将name=zs的数据存入Cookie")]),s._v(" "),o("li",[s._v("服务端ServletA在响应数据的时候，会把Cookie对象响应给浏览器")]),s._v(" "),o("li",[s._v("浏览器接收到响应数据，"),o("strong",[s._v("会把Cookie对象中的数据存储在浏览器内存中，"),o("strong",[s._v("此时浏览器和服务端就")]),s._v("建立了一次会话")])]),s._v(" "),o("li",[o("strong",[s._v("在同一次会话")]),s._v("中浏览器再次发送HTTP请求2给服务端ServletB，浏览器会携带Cookie对象中的所有数据")]),s._v(" "),o("li",[o("strong",[s._v("ServletB接收到请求和数据后，就可以获取到存储在Cookie对象中的数据")]),s._v("，这样同一个会话中的多次请求之间就实现了数据共享")])]),s._v(" "),o("blockquote",[o("p",[s._v("cookie实际上就是一个键值对而已，存储了相关的数据")])]),s._v(" "),o("h3",{attrs:{id:"cookie的原理分析"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#cookie的原理分析"}},[s._v("#")]),s._v(" "),o("strong",[s._v("Cookie的原理分析")])]),s._v(" "),o("p",[s._v("对于Cookie的实现原理是基于HTTP协议的,其中设计到HTTP协议中的两个请求头信息:")]),s._v(" "),o("ul",[o("li",[s._v("响应头:set-cookie")]),s._v(" "),o("li",[s._v("请求头: cookie")])]),s._v(" "),o("img",{staticStyle:{zoom:"70%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20230412140106580.png"}}),s._v(" "),o("ul",[o("li",[s._v("假设AServlet给前端发送Cookie,  "),o("strong",[s._v("BServlet从request中获取Cookie的")])]),s._v(" "),o("li",[s._v("对于AServlet响应数据的时候，Tomcat服务器都是基于HTTP协议来响应数据")]),s._v(" "),o("li",[s._v("当Tomcat发现后端要返回的是一个Cookie对象之后，Tomcat就会在响应头中添加一行数据Set Cookie:username=zs")]),s._v(" "),o("li",[s._v("浏览器获取到响应结果后，从响应头中就可以获取到Set-Cookie对应值username=zs ,"),o("strong",[s._v("并将数据存储在浏览器的内存中")])]),s._v(" "),o("li",[s._v("浏览器再次发送请求给BServlet的时候，浏览器会自动在请求头中添加Cookie: username=zs发送给服务端BServlet")]),s._v(" "),o("li",[s._v("Request对象会把请求头中cookie对应的值封装成一个个Cookie对象，最终形成一个数组")]),s._v(" "),o("li",[s._v("BServlet通过Request对象获取到Cookie数组后，就可以从中获取自己需要的数据")])]),s._v(" "),o("h3",{attrs:{id:"cookie存活时间"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#cookie存活时间"}},[s._v("#")]),s._v(" Cookie存活时间")]),s._v(" "),o("p",[s._v("如果把浏览器关了，因为cookie存储在浏览器内存中，cookie也会被删除，那么，"),o("strong",[s._v("那些在一个周内记住我的登录功能如何实现")]),s._v("？")]),s._v(" "),o("blockquote",[o("p",[s._v("默认情况下，Cookie存储在浏览器内存中，当浏览器关闭，内存释放，则Cookie被销毁")])]),s._v(" "),o("p",[s._v("Cookie其实已经为我们提供好了对应的API来完成这件事，这个API就是"),o("strong",[s._v("setMaxAge")]),s._v(",")]),s._v(" "),o("p",[o("code",[s._v("setMaxAge(int seconds)")])]),s._v(" "),o("p",[s._v("参数值为:")]),s._v(" "),o("ul",[o("li",[s._v("正数：将Cookie写入浏览器所在电脑的硬盘，持久化存储。到时间自动删除")]),s._v(" "),o("li",[s._v("负数：默认值，Cookie在当前浏览器内存中，当浏览器关闭，则Cookie被销毁")]),s._v(" "),o("li",[s._v("零：删除对应cookie")])]),s._v(" "),o("h3",{attrs:{id:"cookie-存储中文"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#cookie-存储中文"}},[s._v("#")]),s._v(" Cookie 存储中文")]),s._v(" "),o("p",[s._v("Cookie不能存储中文，但是如果有这方面的需求，这个时候该如何解决呢?")]),s._v(" "),o("p",[s._v("可以使用URL编码，所以如果需要存储中文，就需要进行转码，具体的实现思路为:")]),s._v(" "),o("ol",[o("li",[o("p",[s._v("在AServlet中对中文进行URL编码，采用URLEncoder.encode()，将编码后的值存入Cookie中")])]),s._v(" "),o("li",[o("p",[s._v("在BServlet中获取Cookie中的值,获取的值为URL编码后的值")])]),s._v(" "),o("li",[o("p",[s._v("将获取的值在进行URL解码,采用URLDecoder.decode()，就可以获取到对应的中文值")])])]),s._v(" "),o("h2",{attrs:{id:"服务端会话跟踪技术-session"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#服务端会话跟踪技术-session"}},[s._v("#")]),s._v(" 服务端会话跟踪技术："),o("strong",[s._v("Session")])]),s._v(" "),o("p",[o("strong",[s._v("Session是基于cookie实现的")])]),s._v(" "),o("p",[o("strong",[s._v("Session")]),s._v("：服务端会话跟踪技术：将数据保存到服务端。")]),s._v(" "),o("ul",[o("li",[o("strong",[s._v("Session是存储在服务端而Cookie是存储在客户端")])]),s._v(" "),o("li",[s._v("存储在客户端的数据容易被窃取和截获，存在很多不安全的因素")]),s._v(" "),o("li",[s._v("存储在服务端的数据相比于客户端来说就更安全")])]),s._v(" "),o("h3",{attrs:{id:"session工作流程"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#session工作流程"}},[s._v("#")]),s._v(" session工作流程")]),s._v(" "),o("ul",[o("li",[s._v("在服务端的AServlet获取一个Session对象，把数据存入其中")]),s._v(" "),o("li",[s._v("在服务端的BServlet获取到相同的Session对象，从中取出数据就可以实现一次会话中多次请求之间的数据共享了")])]),s._v(" "),o("img",{staticStyle:{zoom:"70%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20230412141619608.png"}}),s._v(" "),o("h3",{attrs:{id:"session原理分析"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#session原理分析"}},[s._v("#")]),s._v(" session原理分析")]),s._v(" "),o("p",[s._v("在一次会话中，浏览器与servlet使用的都是一个session对象")]),s._v(" "),o("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20230412142404851.png"}}),s._v(" "),o("blockquote",[o("p",[s._v("注意是一次会话，如果关了浏览器再打开，服务器会新建一个session对象")])]),s._v(" "),o("p",[o("strong",[s._v("Session")]),s._v("是如何"),o("strong",[s._v("保证在一次会话中获取的Session对象是同一个？")])]),s._v(" "),o("p",[o("img",{attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20230412142824620.png",alt:"image-20230412142824620"}})]),s._v(" "),o("p",[s._v("假设demo1与demo2对应两个不同的service方法")]),s._v(" "),o("p",[s._v("(1)demo1在第一次获取session对象的时候，session对象会有一个唯一的标识，假如是id:10")]),s._v(" "),o("p",[s._v("(2)demo1在session中存入其他数据并处理完成所有业务后，需要通过Tomcat服务器响应结果给浏览器")]),s._v(" "),o("p",[s._v("(3)Tomcat服务器发现业务处理中使用了session对象，就会把session的唯一标识id:10当做一个cookie，添加Set-Cookie:JESSIONID=10到响应头中，并响应给浏览器")]),s._v(" "),o("p",[s._v("(4)浏览器接收到响应结果后，会把响应头中的coookie数据存储到浏览器的内存中")]),s._v(" "),o("p",[s._v("(5)浏览器在同一会话中访问demo2的时候，会把cookie中的数据按照cookie: JESSIONID=10的格式添加到请求头中并发送给服务器Tomcat")]),s._v(" "),o("p",[s._v("(6)demo2获取到请求后，从请求头中就读取cookie中的JSESSIONID值为10，然后就会到服务器内存中寻找id:10的session对象，如果找到了，就直接返回该对象，如果没有则新创建一个session对象")]),s._v(" "),o("p",[s._v("(7)关闭打开浏览器后，因为浏览器的cookie已被销毁，所以就没有JESSIONID的数据，服务端获取到的session就是一个全新的session对象")]),s._v(" "),o("h3",{attrs:{id:"session的钝化与活化"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#session的钝化与活化"}},[s._v("#")]),s._v(" session的钝化与活化")]),s._v(" "),o("p",[s._v("session中的数据也是在内存中，如果关闭了tomcat服务器，对应session是否也会删除？")]),s._v(" "),o("p",[s._v("如果是非正常关闭，比如直接kill，会导致session丢失，这样会导致一些问题：")]),s._v(" "),o("ul",[o("li",[s._v("(1)用户把需要购买的商品添加到购物车，因为要实现同一个会话多次请求数据共享，所以假设把数据存入Session对象中")]),s._v(" "),o("li",[s._v("(2)用户正要付钱的时候接到一个电话，付钱的动作就搁浅了")]),s._v(" "),o("li",[s._v("(3)正在用户打电话的时候，购物网站因为某些原因需要重启")]),s._v(" "),o("li",[s._v("(4)重启后session数据被销毁，购物车中的商品信息也就会随之而消失")]),s._v(" "),o("li",[s._v("(5)用户想再次发起支付，就会出为问题")])]),s._v(" "),o("p",[o("strong",[s._v("因此，tomcat正常关闭时会通过钝化存储session，启动时活化读取session")])]),s._v(" "),o("p",[s._v("**钝化：**在服务器正常关闭后，Tomcat会自动将Session数据写入硬盘的文件中钝化的数据路径为:项目目录\\target\\tomcat\\work\\Tomcat\\localhost\\项目名称")]),s._v(" "),o("p",[s._v("\\SESSIONS.ser")]),s._v(" "),o("p",[o("strong",[s._v("活化")]),s._v("：再次启动服务器后，从文件中加载数据到Session中数据加载到Session中后，路径中的SESSIONS.ser文件会被删除掉")]),s._v(" "),o("h3",{attrs:{id:"session销毁"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#session销毁"}},[s._v("#")]),s._v(" session销毁")]),s._v(" "),o("p",[s._v("（1）默认情况下，无操作，30分钟自动销毁")]),s._v(" "),o("p",[s._v("对于这个失效时间，是可以通过配置进行修改的在项目的web.xml中")]),s._v(" "),o("p",[o("img",{attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20230412144135949.png",alt:"image-20230412144135949"}})]),s._v(" "),o("p",[s._v("（2）调用Session对象的invalidate() 进行销毁，   在SessionDemo2类中添加session销毁的方法")]),s._v(" "),o("h3",{attrs:{id:"总结"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),o("ul",[o("li",[s._v("session数据存储在服务端，服务器重启后，session数据会被保存")]),s._v(" "),o("li",[s._v("浏览器被关闭启动后，重新建立的连接就已经是一个全新的会话，获取的session数据也是一个新的对象")]),s._v(" "),o("li",[s._v("session的数据要想共享，浏览器不能关闭，所以session数据不能长期保存数据")]),s._v(" "),o("li",[s._v("cookie是存储在客户端，是可以长期保存")])])])}),[],!1,null,null,null);o.default=_.exports}}]);