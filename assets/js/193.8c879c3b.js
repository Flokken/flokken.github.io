(window.webpackJsonp=window.webpackJsonp||[]).push([[193],{521:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),s("p",[s("strong",[t._v("字面量")])]),t._v(" "),s("p",[t._v('比如123,"123"。字面量是常量，不可改变')]),t._v(" "),s("h3",{attrs:{id:"值类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#值类型"}},[t._v("#")]),t._v(" 值类型")]),t._v(" "),s("p",[t._v("python中一切类型都是引用类型。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("类型")]),t._v(" "),s("th",[t._v("描述")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("数字（Number）")]),t._v(" "),s("td",[t._v("支持整数（int）浮点数（float）复数（complex）布尔（bool）")]),t._v(" "),s("td",[t._v("注意数字包括了，整数浮点数，布尔值。也就是他们是一个类型")])]),t._v(" "),s("tr",[s("td",[t._v("字符串（String）")]),t._v(" "),s("td",[t._v("描述文本的一种数据类型")]),t._v(" "),s("td",[t._v("字符串（string）由任意数量的字符组成")])]),t._v(" "),s("tr",[s("td",[t._v("列表（List）")]),t._v(" "),s("td",[t._v("有序的可变序列")]),t._v(" "),s("td",[t._v("Python中使用最频繁的数据类型，可有序记录一堆数据")])]),t._v(" "),s("tr",[s("td",[t._v("元组（Tuple）")]),t._v(" "),s("td",[t._v("有序的不可变序列")]),t._v(" "),s("td",[t._v("可有序记录一堆不可变的Python数据集合")])]),t._v(" "),s("tr",[s("td",[t._v("集合（Set）")]),t._v(" "),s("td",[t._v("无序不重复集合")]),t._v(" "),s("td",[t._v("可无序记录一堆不重复的Python数据集合")])]),t._v(" "),s("tr",[s("td",[t._v("字典（Dictionary）")]),t._v(" "),s("td",[t._v("无序Key-Value集合")]),t._v(" "),s("td",[t._v("可无序记录一堆Key-Value型的Python数据集合")])])])]),t._v(" "),s("h2",{attrs:{id:"变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[t._v("#")]),t._v(" 变量")]),t._v(" "),s("p",[t._v("Python的动态类型系统"),s("strong",[t._v("允许变量在不同时间指向不同类型的对象")]),t._v("。")]),t._v(" "),s("p",[t._v("所以注意变量是没有类型的，可以看做一个指向数据的引用/指针，有类型的是数据。")]),t._v(" "),s("p",[s("strong",[t._v("所以变量可以指向不同类型的数据")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(' x   =  123    #x没有类型，   123是整数类型\n x  =  "123"   #x没有类型   "123"是字符串类型\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h3",{attrs:{id:"命名规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命名规范"}},[t._v("#")]),t._v(" 命名规范")]),t._v(" "),s("p",[t._v("标识符命名中，只允许出现：")]),t._v(" "),s("p",[t._v("英文 中文 数字 下划线（_）")]),t._v(" "),s("h2",{attrs:{id:"类型转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型转换"}},[t._v("#")]),t._v(" 类型转换")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("type()")]),t._v(".type(x)可以查看x指向的"),s("strong",[t._v("数据的类型")])])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("x = 123\ntype(x)  #int\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("我们通过一些函数可以实现类型转换。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("函数")]),t._v(" "),s("th",[s("strong",[t._v("说明")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("int(x)")]),t._v(" "),s("td",[t._v("将x转换为一个整数")])]),t._v(" "),s("tr",[s("td",[t._v("float(x)")]),t._v(" "),s("td",[t._v("将x转换为一个浮点数")])]),t._v(" "),s("tr",[s("td",[t._v("str(x)")]),t._v(" "),s("td",[t._v("将对象 x 转换为字符串")])])])]),t._v(" "),s("p",[t._v("注意：")]),t._v(" "),s("ul",[s("li",[t._v("任何类型，都可以通过"),s("code",[t._v("str()")]),t._v("转换成字符串类型")]),t._v(" "),s("li",[t._v("但是"),s("code",[t._v("int(x),float(x)")]),t._v("需要x真的是数字才能转换\n"),s("ul",[s("li",[t._v("比如"),s("code",[t._v("int(kkk)")]),t._v("是不行的，会报错")])])]),t._v(" "),s("li",[t._v("浮点数转整数，"),s("strong",[t._v("直接丢弃小数部分")])])]),t._v(" "),s("h2",{attrs:{id:"运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[t._v("#")]),t._v(" 运算符")]),t._v(" "),s("p",[t._v("下面只举python特殊的")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("运算符")]),t._v(" "),s("th",[t._v("描述")]),t._v(" "),s("th",[t._v("实例")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("/")]),t._v(" "),s("td",[t._v("除")]),t._v(" "),s("td",[t._v("这是带浮点数的")])]),t._v(" "),s("tr",[s("td",[t._v("//")]),t._v(" "),s("td",[t._v("下取整")]),t._v(" "),s("td",[t._v("相当于int型除法")])]),t._v(" "),s("tr",[s("td",[t._v("**")]),t._v(" "),s("td",[t._v("指数")]),t._v(" "),s("td",[t._v("2**3=8")])])])]),t._v(" "),s("p",[t._v("注意：")]),t._v(" "),s("ul",[s("li",[t._v("python没有"),s("code",[t._v("++")]),t._v("，"),s("code",[t._v("--")]),t._v("运算符。只能使用"),s("code",[t._v("+=1")]),t._v("，"),s("code",[t._v("-=1")]),t._v("这样")])]),t._v(" "),s("h2",{attrs:{id:"字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[t._v("#")]),t._v(" 字符串")]),t._v(" "),s("p",[t._v("不管是单引号"),s("code",[t._v("''")]),t._v("还是双引号"),s("code",[t._v('""')]),t._v("，都认为是字符串")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),t._v("\nname "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#都是字符串")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h3",{attrs:{id:"字符串操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串操作"}},[t._v("#")]),t._v(" 字符串操作")]),t._v(" "),s("p",[t._v('首先注意，字符串只能和字符串一起操作，比如"xxx"和"yyy"')]),t._v(" "),s("p",[t._v('但是  "xxx"和123不能一起操作')]),t._v(" "),s("ul",[s("li",[s("p",[t._v("拼接。字符串支持+来连接两个字符串")]),t._v(" "),s("ul",[s("li",[s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("str1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),t._v("\nstr2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"World"')]),t._v("\nresult "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" str2\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 输出 "HelloWorld"')]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])])])])]),t._v(" "),s("li",[s("p",[t._v("重复。使用 "),s("code",[t._v("*")]),t._v(" 运算符可以将一个字符串重复多次。")]),t._v(" "),s("ul",[s("li",[s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("str1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),t._v("\nresult "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 输出 "HelloHelloHello"')]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("索引")]),t._v("：可以通过索引访问字符串中的单个字符，索引从 0 开始。")]),t._v(" "),s("ul",[s("li",[s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("pythonCopy codemy_string "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Python"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("my_string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出 'P'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("my_string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出 'h'")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("切片")]),t._v("：可以通过切片操作获取字符串的子串。")]),t._v(" "),s("ul",[s("li",[s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("pythonCopy codemy_string "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Python"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("my_string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 输出 "yth"')]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("成员检查")]),t._v("：可以使用 "),s("code",[t._v("in")]),t._v(" 或 "),s("code",[t._v("not in")]),t._v(" 运算符检查一个字符串是否包含某个子串。")]),t._v(" "),s("ul",[s("li",[s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("pythonCopy codemy_string "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Python"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"th"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" my_string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出 True")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" my_string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出 True")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])])])])])]),t._v(" "),s("h2",{attrs:{id:"判断语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#判断语句"}},[t._v("#")]),t._v(" 判断语句")]),t._v(" "),s("p",[t._v("python的判断语句有点特殊，主要有两种")]),t._v(" "),s("p",[t._v("如果只有一个判断，那么是，if和else")]),t._v(" "),s("p",[t._v("如果有多个判断，那么是 "),s("code",[t._v("if-elif-else")]),t._v("，使用"),s("code",[t._v("elif")]),t._v("来写多个判断（而不是else if）")]),t._v(" "),s("h2",{attrs:{id:"循环语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#循环语句"}},[t._v("#")]),t._v(" 循环语句")]),t._v(" "),s("ul",[s("li",[t._v("while循环。注意判断条件不加括号")])]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("ul",[s("li",[t._v("for 循环 。  for .. in  "),s("strong",[t._v("可迭代对象")])]),t._v(" "),s("li",[t._v("这个可迭代对象有很多，list ， 字符串 ，或者"),s("code",[t._v("range(n)")]),t._v("等等等都可以")])]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1234"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h2",{attrs:{id:"函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),s("h3",{attrs:{id:"函数定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数定义"}},[t._v("#")]),t._v(" 函数定义")]),t._v(" "),s("p",[t._v("函数格式如下")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" 函数名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("参数"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("，参数"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("，参数"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t函数体\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" 返回值\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("注意:")]),t._v(" "),s("ul",[s("li",[t._v("没有返回值，可以省略return 语句")]),t._v(" "),s("li",[t._v("没有入参，参数可以空着")])]),t._v(" "),s("h3",{attrs:{id:"局部变量和全局变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#局部变量和全局变量"}},[t._v("#")]),t._v(" 局部变量和全局变量")]),t._v(" "),s("p",[t._v("写在函数里面的就是局部变量（除非加上global关键字）")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("dfs testA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#局部变量")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntestA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#全局变量")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("h2",{attrs:{id:"数据容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据容器"}},[t._v("#")]),t._v(" 数据容器")]),t._v(" "),s("p",[t._v("Python中的数据容器：一种可以容纳多份数据的数据类型，容纳的每一份数据称之为1个元素每一个元素，可以是任意类型的数据，如字符串、数字、布尔等。")]),t._v(" "),s("p",[t._v("数据容器根据特点的不同，")]),t._v(" "),s("ul",[s("li",[t._v("是否支持重复元素")]),t._v(" "),s("li",[t._v("是否可以修改")]),t._v(" "),s("li",[t._v("是否有序")])]),t._v(" "),s("p",[t._v("等分为5类，分别是：列表（list）、元组（tuple）、字符串（str）、集合（set）、字典（dict）")]),t._v(" "),s("h3",{attrs:{id:"通用方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通用方法"}},[t._v("#")]),t._v(" 通用方法")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("min(iterable)")]),t._v(" "),s("td",[t._v("返回可迭代对象中的最小值")])]),t._v(" "),s("tr",[s("td",[t._v("sum(iterable)")]),t._v(" "),s("td",[t._v("返回可迭代对象中的和")])]),t._v(" "),s("tr",[s("td",[t._v("abs()")]),t._v(" "),s("td",[t._v("返回一个数的绝对值")])]),t._v(" "),s("tr",[s("td",[t._v("sorted(iterable, key=None, reverse=False)")]),t._v(" "),s("td",[s("strong",[t._v("返回一个排序好的列表，不管之前是什么容器，都返回列表")])])]),t._v(" "),s("tr",[s("td",[t._v("type()")]),t._v(" "),s("td",[t._v("返回一个对象的类型。")])]),t._v(" "),s("tr",[s("td",[t._v("range()")]),t._v(" "),s("td",[t._v("生成一个数字序列。注意是左闭右开的")])]),t._v(" "),s("tr",[s("td",[t._v("enumerate()")]),t._v(" "),s("td",[t._v("返回可迭代对象的索引和值。(index,value)")])]),t._v(" "),s("tr",[s("td",[t._v("zip()")]),t._v(" "),s("td",[t._v("将多个可迭代对象打包成元组的列表。")])]),t._v(" "),s("tr",[s("td",[t._v("list()")]),t._v(" "),s("td",[t._v("转换为列表")])]),t._v(" "),s("tr",[s("td",[t._v("tuple()")]),t._v(" "),s("td",[t._v("转换为元组")])]),t._v(" "),s("tr",[s("td",[t._v("str()")]),t._v(" "),s("td",[t._v("转换为字符串")])]),t._v(" "),s("tr",[s("td",[t._v("set()")]),t._v(" "),s("td",[t._v("转换为集合")])])])]),t._v(" "),s("p",[t._v("举例")]),t._v(" "),s("p",[s("code",[t._v("enumerate()")])]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("letters "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'d'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" letter "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("enumerate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("letters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" letter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[s("code",[t._v("zip()")])]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("letters "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nnumbers "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nzipped "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("zip")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("letters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" numbers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("zipped"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出 [('a', 1), ('b', 2), ('c', 3)]")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("h3",{attrs:{id:"列表list"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#列表list"}},[t._v("#")]),t._v(" 列表list")]),t._v(" "),s("ul",[s("li",[t._v("以[]作为标识")]),t._v(" "),s("li",[t._v("列表内每一个元素用"),s("code",[t._v(",")]),t._v("隔开")]),t._v(" "),s("li",[s("code",[t._v("list()/[]")]),t._v("可以创建一个空列表")]),t._v(" "),s("li",[s("strong",[t._v("一个列表里面，支持存储不同数据类型，也支持嵌套（元素也是列表）")])])]),t._v(" "),s("p",[t._v("列表"),s("strong",[t._v("特点总结（！！！）")])]),t._v(" "),s("ul",[s("li",[t._v("可以容纳不同类型的元素（混装）\n"),s("ul",[s("li",[t._v("允许元素可变")])])]),t._v(" "),s("li",[t._v("数据是"),s("strong",[t._v("有序存储")]),t._v("的（有下标序号），")]),t._v(" "),s("li",[s("strong",[t._v("允许重复")]),t._v("数据存在")]),t._v(" "),s("li",[s("strong",[t._v("可以修改")]),t._v("（增加或删除元素等）")]),t._v(" "),s("li",[s("strong",[t._v("可以迭代")])])]),t._v(" "),s("p",[t._v("定义:")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#字面量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("e1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("e2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("e3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义变量")]),t._v("\nnums "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("e1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("e2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("e3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义空列表")]),t._v("\nnums "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nnums "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h4",{attrs:{id:"索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[t._v("#")]),t._v(" 索引")]),t._v(" "),s("p",[t._v("列表的所有有正向索引和反向索引")]),t._v(" "),s("p",[t._v("正向索引，从0（第一个元素）开始,  取值区间是"),s("code",[t._v("[0,n-1]")])]),t._v(" "),s("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20240422164402173.png",alt:"image-20240422164402173"}}),t._v(" "),s("p",[t._v("反向索引，从-1（倒数第一个元素）开始 , 取值区间是"),s("code",[t._v("[-n,-1]")])]),t._v(" "),s("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20240422164415528.png",alt:"image-20240422164415528"}}),t._v(" "),s("p",[s("strong",[t._v("嵌套列表的下标")])]),t._v(" "),s("p",[t._v("列表支持嵌套，所以这里就像二维数组一样，嵌套的列表也支持索引")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20240422165304543.png",alt:"image-20240422165304543"}})]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2层嵌套list")]),t._v("\nnums "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#获取内层第一个list")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#获取内存第一个list的第一个元素")]),t._v("\npreint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("h4",{attrs:{id:"常用方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用方法"}},[t._v("#")]),t._v(" 常用方法")]),t._v(" "),s("blockquote",[s("p",[t._v("https://blog.csdn.net/2301_77000936/article/details/134350393")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法")]),t._v(" "),s("th",[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("append(obj)")]),t._v(" "),s("td",[t._v("在列表末尾添加一个元素")])]),t._v(" "),s("tr",[s("td",[t._v("extend(iterable)")]),t._v(" "),s("td",[t._v("在列表末尾添加一个可迭代的对象中的所有元素。")])]),t._v(" "),s("tr",[s("td",[t._v("insert(i, obj)")]),t._v(" "),s("td",[t._v("在列表的 i 位置插入一个元素。")])]),t._v(" "),s("tr",[s("td",[t._v("remove(obj)")]),t._v(" "),s("td",[t._v("移除列表中第一个匹配 obj 的元素。(从前往后)")])]),t._v(" "),s("tr",[s("td",[t._v("pop (index)")]),t._v(" "),s("td",[t._v("移除并返回列表中指定位置index的元素。如果不指定位置，默认为移除并返回最后一个元素。")])]),t._v(" "),s("tr",[s("td",[t._v("clear()")]),t._v(" "),s("td",[t._v("移除列表中的所有元素")])]),t._v(" "),s("tr",[s("td",[t._v("index(obj)")]),t._v(" "),s("td",[t._v("返回列表中第一个匹配 obj 的索引。")])]),t._v(" "),s("tr",[s("td",[t._v("count(obj)")]),t._v(" "),s("td",[t._v("返回列表中 obj 出现的次数。")])]),t._v(" "),s("tr",[s("td",[t._v("sort(*, key=None, reverse=False)")]),t._v(" "),s("td",[t._v("对列表进行排序。注意"),s("strong",[t._v("直接修改列表本身")])])]),t._v(" "),s("tr",[s("td",[t._v("reverse()")]),t._v(" "),s("td",[t._v("将列表中的元素反转")])]),t._v(" "),s("tr",[s("td",[t._v("copy()")]),t._v(" "),s("td",[t._v("返回列表的一个"),s("strong",[t._v("副本，是浅拷贝")]),t._v("，相当于只是复制了一个引用")])])])]),t._v(" "),s("p",[s("strong",[t._v("上述方法都是直接修改列表本身")])]),t._v(" "),s("p",[t._v("举例")]),t._v(" "),s("p",[s("strong",[t._v("添加元素")])]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("nums"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nnums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("extend"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#[1,2,3,4,4,5]")]),t._v("\nnums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#[1,2,3,4,4,5,6]")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h3",{attrs:{id:"元组tuple"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元组tuple"}},[t._v("#")]),t._v(" 元组tuple()")]),t._v(" "),s("p",[t._v("列表是可以"),s("strong",[t._v("修改")]),t._v("的，但是我们有时候希望不被修改，那么就引入了tuple这种不能被修改的容器。")]),t._v(" "),s("p",[s("strong",[t._v("元组一旦定义完成，就不可修改")])]),t._v(" "),s("blockquote",[s("p",[t._v("除了不能修改，和列表差不多")])]),t._v(" "),s("p",[t._v("特点：")]),t._v(" "),s("ul",[s("li",[t._v("支持装不同类型元素（混装）\n"),s("ul",[s("li",[t._v("但是元素必须是不可变的（元组，字符串，集合等），列表和字典就是可变的。")])])]),t._v(" "),s("li",[t._v("可重复")]),t._v(" "),s("li",[t._v("有序")]),t._v(" "),s("li",[t._v("不可修改")]),t._v(" "),s("li",[s("strong",[t._v("可以迭代")])])]),t._v(" "),s("h4",{attrs:{id:"定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[t._v("#")]),t._v(" "),s("strong",[t._v("定义：")])]),t._v(" "),s("p",[t._v("定义元组使用小括号"),s("code",[t._v("()")]),t._v("，或者"),s("code",[t._v("tuple()")]),t._v("。元素间使用逗号隔开")]),t._v(" "),s("p",[t._v("Tips:")]),t._v(" "),s("p",[t._v("只有一个元素的元组也要"),s("strong",[t._v("加逗号")]),t._v("，才能表示元组")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#空元组")]),t._v("\nnums "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("tuple")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnums "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#一个元素的元组 ，注意逗号要加上")]),t._v("\nnums"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h4",{attrs:{id:"常用方法-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用方法-2"}},[t._v("#")]),t._v(" 常用方法")]),t._v(" "),s("p",[t._v("因为不能修改，所有api也少了很多")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("方法")])]),t._v(" "),s("th",[s("strong",[t._v("作用")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("index()")]),t._v(" "),s("td",[t._v("查找某个数据，如果数据存在返回对应的下标，否则报错")])]),t._v(" "),s("tr",[s("td",[t._v("count()")]),t._v(" "),s("td",[t._v("统计某个数据在当前元组出现的次数")])]),t._v(" "),s("tr",[s("td",[t._v("len(元组)")]),t._v(" "),s("td",[t._v("统计元组内的元素个数")])])])]),t._v(" "),s("h3",{attrs:{id:"字符串-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串-2"}},[t._v("#")]),t._v(" 字符串")]),t._v(" "),s("p",[t._v("字符串是什么容器？是字符的容器。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20240422193908659.png",alt:"image-20240422193908659"}})]),t._v(" "),s("p",[t._v("特点")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("不能修改，和元组一样")]),t._v(" "),s("ul",[s("li",[t._v("不能添加，删除元素")])])]),t._v(" "),s("li",[s("strong",[t._v("只能存储字符")])]),t._v(" "),s("li",[t._v("可以重复，")]),t._v(" "),s("li",[t._v("有序")]),t._v(" "),s("li",[s("strong",[t._v("可以迭代")])])]),t._v(" "),s("p",[s("strong",[t._v("常用方法")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("[index]")]),t._v(" "),s("td",[t._v("根据下标索引取出特定位置字符")])]),t._v(" "),s("tr",[s("td",[t._v("index(substring ）")]),t._v(" "),s("td",[t._v("查找给定字符的"),s("strong",[t._v("第一个匹配项的下标")])])]),t._v(" "),s("tr",[s("td",[t._v("replace(str1, str2)")]),t._v(" "),s("td",[t._v("将字符串内的全部str1，替换为str2.不会修改原字符串，"),s("strong",[t._v("返回一个新的字符串")])])]),t._v(" "),s("tr",[s("td",[t._v(".split(str )")]),t._v(" "),s("td",[t._v("按照str，对字符串进行分隔不会修改原字符串，而是"),s("strong",[t._v("得到一个新的列表")])])]),t._v(" "),s("tr",[s("td",[t._v(".strip(str )")]),t._v(" "),s("td",[t._v("移除字符串首尾的str  ，如果不指定str，直接strip()是去除首尾空格。不会修改原字符串，"),s("strong",[t._v("返回一个新的字符串")])])]),t._v(" "),s("tr",[s("td",[t._v(".count(str)")]),t._v(" "),s("td",[t._v("统计字符串str的出现次数")])]),t._v(" "),s("tr",[s("td",[t._v("len(str)")]),t._v(" "),s("td",[t._v("统计字符串的字符个数")])])])]),t._v(" "),s("h3",{attrs:{id:"序列的切片"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#序列的切片"}},[t._v("#")]),t._v(" 序列的切片")]),t._v(" "),s("p",[t._v("序列是指：内容"),s("strong",[t._v("连续、有序，可使用下标索引")]),t._v("的一类数据容器。")]),t._v(" "),s("p",[t._v("所以"),s("strong",[t._v("列表，元组，字符串都属于序列")])]),t._v(" "),s("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20240422195924336.png",alt:"image-20240422195924336"}}),t._v(" "),s("p",[t._v("序列支持切片，即：列表、元组、字符串，均支持进行切片操作")]),t._v(" "),s("p",[t._v("切片：从一个序列中，取出一个子序列")]),t._v(" "),s("p",[t._v("切片格式:  num[start,end,step ] ，注意这是左闭右开即"),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[s("mjx-math",{staticClass:"MJX-TEX"},[s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"["}})],1),s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"s"}})],1),s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"t"}})],1),s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"a"}})],1),s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"r"}})],1),s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"t"}})],1),s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:","}})],1),s("mjx-mi",{staticClass:"mjx-i",attrs:{space:"2"}},[s("mjx-c",{attrs:{c:"e"}})],1),s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"n"}})],1),s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"d"}})],1),s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("​。")],1),t._v(" "),s("blockquote",[s("p",[t._v("参考：https://flokken.github.io/pages/7c6019/#%E8%B6%85%E5%87%BA%E6%9C%89%E6%95%88%E7%B4%A2%E5%BC%95%E8%8C%83%E5%9B%B4")])]),t._v(" "),s("p",[t._v("注意：")]),t._v(" "),s("ul",[s("li",[t._v("切片不会影响原序列，"),s("strong",[t._v("只会返回一个新的序列")])])]),t._v(" "),s("p",[s("strong",[t._v("缺省情况：")])]),t._v(" "),s("p",[s("code",[t._v("start")]),t._v("，"),s("code",[t._v("end")]),t._v("以"),s("code",[t._v("step")]),t._v("。都是可以缺省的，在缺省的情况下，Python的行为是"),s("strong",[t._v("尽可能取最大区间")]),t._v("，具体来说：")]),t._v(" "),s("blockquote",[s("p",[t._v("！！！按照扩充索引范围的观点，"),s("code",[t._v("start")]),t._v("的缺省值是"),s("strong",[t._v("无穷小()")]),t._v("，"),s("code",[t._v("end")]),t._v("的缺省值是"),s("strong",[t._v("无穷大()")]),t._v("。")]),t._v(" "),s("p",[t._v("因此[:-1]和[:]结果不一样,因为正反不一样")])]),t._v(" "),s("ul",[s("li",[t._v("start缺省时无穷小，表示从头开始")]),t._v(" "),s("li",[t._v("end是无穷大，表示从尾开始")]),t._v(" "),s("li",[t._v("step缺省，那么step=1\n"),s("ul",[s("li",[t._v("如果step<0，表示倒序")]),t._v(" "),s("li",[t._v("step>0，表示正序")])])])]),t._v(" "),s("p",[t._v("举例")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("nums "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"12345"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#54321")]),t._v("\nnums "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\npreint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#从3开始到1，步长-1（倒序）")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h3",{attrs:{id:"集合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#集合"}},[t._v("#")]),t._v(" 集合")]),t._v(" "),s("p",[t._v("序列中的元素可以重复，那么我们需要无重复的集合怎么办？所以引入集合")]),t._v(" "),s("p",[t._v("特点：")]),t._v(" "),s("ul",[s("li",[t._v("无序\n"),s("ul",[s("li",[t._v("不支持下标")])])]),t._v(" "),s("li",[t._v("不能重复")]),t._v(" "),s("li",[s("strong",[t._v("可以修改")])]),t._v(" "),s("li",[t._v("支持保持多种类型元素（混装）\n"),s("ul",[s("li",[t._v("但是元素必须是不可变的（元组，字符串，集合等），列表和字典就是可变的")])])])]),t._v(" "),s("h4",{attrs:{id:"定义-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义-2"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),s("p",[t._v("集合可以通过"),s("code",[t._v("{}")]),t._v("或者"),s("code",[t._v("set()")]),t._v("来创建")]),t._v(" "),s("p",[t._v("举例")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#集合字面量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("e1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("e2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("e3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义集合变量")]),t._v("\nx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("e1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("e2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("e3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义空集合")]),t._v("\nx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   \nx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h4",{attrs:{id:"常用方法-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用方法-3"}},[t._v("#")]),t._v(" 常用方法")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("add(e )")]),t._v(" "),s("th",[t._v("集合内添加一个元素")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("remove(e )")]),t._v(" "),s("td",[t._v("移除集合内指定的元素")])]),t._v(" "),s("tr",[s("td",[t._v("pop()")]),t._v(" "),s("td",[t._v("从集合中随机取出一个元素")])]),t._v(" "),s("tr",[s("td",[t._v("clear()")]),t._v(" "),s("td",[t._v("将集合清空")])]),t._v(" "),s("tr",[s("td",[t._v("difference(  Set2 )")]),t._v(" "),s("td",[t._v("得到一个新集合，内含2个集合的差集。原有的2个集合内容不变")])]),t._v(" "),s("tr",[s("td",[t._v("difference_update(Set2 )")]),t._v(" "),s("td",[t._v("在集合1中，删除集合2中存在的元素集合1被修改，集合2不变")])]),t._v(" "),s("tr",[s("td",[t._v("union(Set2 )")]),t._v(" "),s("td",[t._v("得到1个新集合，内含2个集合的全部元素原有的2个集合内容不变")])])])]),t._v(" "),s("h3",{attrs:{id:"字典"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字典"}},[t._v("#")]),t._v(" 字典")]),t._v(" "),s("h4",{attrs:{id:"定义-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义-3"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),s("p",[t._v("字典的定义，同样使用{}，也可以使用"),s("code",[t._v("dict()")]),t._v("。不过存储的元素是一个个的：键值对，如下语法：")]),t._v(" "),s("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20240422203802044.png",alt:"image-20240422203802044"}}),t._v(" "),s("p",[s("strong",[t._v("特点")])]),t._v(" "),s("ul",[s("li",[t._v("键值对之间使用逗号分隔")]),t._v(" "),s("li",[t._v("可以修改")]),t._v(" "),s("li",[t._v("Key和Value可以是任意类型的数据（key不可为字典）")]),t._v(" "),s("li",[t._v("Key不重复，重复会对原有数据覆盖")]),t._v(" "),s("li",[t._v("无序，所以不能用下标\n"),s("ul",[s("li",[t._v("可以通过key检索，"),s("strong",[t._v("同样使用[]运算符")])])])])]),t._v(" "),s("h4",{attrs:{id:"常用方法-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用方法-4"}},[t._v("#")]),t._v(" 常用方法")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("dict[Key]")]),t._v(" "),s("td",[t._v("获取指定Key对应的Value值")])]),t._v(" "),s("tr",[s("td",[t._v("dict[Key] = Value")]),t._v(" "),s("td",[s("strong",[t._v("添加或更新键值对")])])]),t._v(" "),s("tr",[s("td",[t._v("pop(Key)")]),t._v(" "),s("td",[t._v("取出Key对应的Value并在字典内删除此Key的键值对")])]),t._v(" "),s("tr",[s("td",[t._v("clear()")]),t._v(" "),s("td",[t._v("清空字典")])]),t._v(" "),s("tr",[s("td",[t._v("keys()")]),t._v(" "),s("td",[t._v("获取字典的全部Key，可用于for循环遍历字典")])])])]),t._v(" "),s("h3",{attrs:{id:"数据容器总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据容器总结"}},[t._v("#")]),t._v(" 数据容器总结")]),t._v(" "),s("p",[t._v("是否支持下标索引支持：")]),t._v(" "),s("ul",[s("li",[t._v("列表、元组、字符串 - 序列类型")]),t._v(" "),s("li",[t._v("不支持：集合、字典 - 非序列类型")])]),t._v(" "),s("p",[t._v("是否支持重复元素：")]),t._v(" "),s("ul",[s("li",[t._v("支持：列表、元组、字符串 - 序列类型")]),t._v(" "),s("li",[t._v("不支持：集合、字典 - 非序列类型")])]),t._v(" "),s("p",[t._v("是否可以修改支持：")]),t._v(" "),s("ul",[s("li",[t._v("列表、集合、字典")]),t._v(" "),s("li",[t._v("不支持：元组、字符串")])]),t._v(" "),s("p",[s("strong",[t._v("遍历：")])]),t._v(" "),s("ul",[s("li",[t._v("5类数据容器都支持for循环遍历列表、元组、字符串支持while")]),t._v(" "),s("li",[t._v("循环，集合、字典不支持（无法下标索引）")])]),t._v(" "),s("p",[s("strong",[t._v("排序：")])]),t._v(" "),s("ul",[s("li",[t._v("sorted(容器, [reverse=True])将给定容器进行排序")]),t._v(" "),s("li",[s("strong",[t._v("注意，排序后都会得到列表（list）对象。")])])]),t._v(" "),s("h2",{attrs:{id:"函数-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数-2"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),s("p",[s("strong",[t._v("多个返回值")])]),t._v(" "),s("p",[t._v("在return时用逗号隔开")]),t._v(" "),s("blockquote",[s("p",[t._v("实际上此时返回的是一个元组")])]),t._v(" "),s("p",[t._v("举例")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\nx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[s("strong",[t._v("函数的四种类型参数")])]),t._v(" "),s("ul",[s("li",[t._v("位置参数,调用函数时根据函数定义的参数位置来传递参数")])]),t._v(" "),s("p",[t._v("也就是最常见的参数。")]),t._v(" "),s("p",[t._v("注意："),s("strong",[t._v("传递的参数和定义的参数的顺序及个数必须一致")])]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("user")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("gender"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t函数体\nuser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tom'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'男'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("ul",[s("li",[t._v("关键字参数，函数调用时通过“键=值”形式传递参数.")])]),t._v(" "),s("p",[t._v("举例")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("user")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("gender"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t函数体\nuser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tom'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("gender"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'男'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("注意："),s("strong",[t._v("函数调用时，如果有位置参数时，位置参数必须在关键字参数的前面，但关键字参数之间不存在先后顺序")])]),t._v(" "),s("ul",[s("li",[t._v("缺省参数。缺省参数也叫默认参数，用于定义函数，为参数提供默认值")])]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("user")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("gender"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t函数体\nuser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tom'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("gender"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'男'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("ul",[s("li",[t._v("不定长参数。不定长参数也叫可变参数。用于传递0到n个参数")])]),t._v(" "),s("p",[t._v("不定长参数有两种类型。")]),t._v(" "),s("p",[t._v("①位置传递")]),t._v(" "),s("p",[t._v("传进的所有参数都会被"),s("code",[t._v("*args")]),t._v("变量收集，"),s("strong",[t._v("它会根据传进参数的位置合并为一个元组(tuple)，args是元组类型")]),t._v("，这就是位置传递")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("user")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#('tom',20)")]),t._v("\nuser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tom'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("②关键字传递")]),t._v(" "),s("p",[t._v("参数是“键=值”形式的形式的情况下, 所有的“键=值”都会被"),s("code",[t._v("**kwargs")]),t._v("接受, 同时会根据“键=值”组成字典")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("user")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#{'name':'tom','age':20}")]),t._v("\nuser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tom'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("h3",{attrs:{id:"匿名函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#匿名函数"}},[t._v("#")]),t._v(" 匿名函数")]),t._v(" "),s("ul",[s("li",[t._v("函数的定义中def关键字，可以定义带有名称的函数")]),t._v(" "),s("li",[t._v("lambda关键字，可以定义匿名函数（无名称）")])]),t._v(" "),s("p",[t._v("有名称的函数，可以基于名称重复使用。"),s("strong",[t._v("无名称的匿名函数，只可临时使用一次。")])]),t._v(" "),s("p",[t._v("语法格式")]),t._v(" "),s("p",[s("code",[t._v("lambda 参数:函数体")])]),t._v(" "),s("blockquote",[s("p",[t._v("和java相比。这里参数和函数体都不加括号， ->变成 :")])]),t._v(" "),s("p",[t._v("举例")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("compute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("compute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3")]),t._v("\ntest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lambda")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);