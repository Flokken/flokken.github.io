(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{360:function(s,t,a){"use strict";a.r(t);var n=a(4),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"gremlin"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gremlin"}},[s._v("#")]),s._v(" Gremlin")]),s._v(" "),t("p",[s._v("参考")]),s._v(" "),t("blockquote",[t("p",[s._v("https://tinkerpop.apache.org/docs/current/reference/#basic-gremlin")]),s._v(" "),t("p",[s._v("https://blog.csdn.net/javeme/article/details/82631834")])]),s._v(" "),t("h2",{attrs:{id:"基础属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基础属性"}},[s._v("#")]),s._v(" 基础属性")]),s._v(" "),t("h3",{attrs:{id:"图基本概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#图基本概念"}},[s._v("#")]),s._v(" 图基本概念")]),s._v(" "),t("ul",[t("li",[s._v("图Graph：指关系图，就是整张图，包括边与与节点以及各自的属性.")]),s._v(" "),t("li",[s._v("顶点Vertex：一般指实体。比如person")]),s._v(" "),t("li",[s._v("边Edge：一般指关系。比如person与person直接，可以有knows，表示两个人认识的关系")]),s._v(" "),t("li",[s._v("属性Property：顶点或边可以包含属性，比如person是一个节点，可以有属性name.")])]),s._v(" "),t("p",[s._v("这里以hugegraph官网的示例图为例,")]),s._v(" "),t("img",{attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20230509220512416.png",styl:"zoom:70%"}}),s._v(" "),t("p",[t("strong",[s._v("节点类型：")])]),s._v(" "),t("p",[s._v("Person,属性有name,age,city")]),s._v(" "),t("p",[s._v("software,属性有name ,price")]),s._v(" "),t("p",[t("strong",[s._v("边类型")])]),s._v(" "),t("p",[s._v("knows,属性有date")]),s._v(" "),t("p",[s._v("created，无属性")]),s._v(" "),t("h3",{attrs:{id:"图基本操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#图基本操作"}},[s._v("#")]),s._v(" 图基本操作")]),s._v(" "),t("blockquote",[t("p",[s._v("这里仅根据本人的已掌握信息记录使用方法，与一些需要注意的点")])]),s._v(" "),t("p",[s._v("示例：")]),s._v(" "),t("div",{staticClass:"language-groovy line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-groovy"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 注意：g 代表的是整个图")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 一切查询都是以图开始")]),s._v("\ng"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("V")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//查询顶点，一般作为图查询的第1步,开头的g表示graph，V()表示选择顶点")]),s._v("\n\ng"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("E")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//查询所有边")]),s._v("\n\ng"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("V")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3:云服务器CVM'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//注意，这里的id，如果建图时没有，会自动加上，格式是x:name，x是json的结构")]),s._v("\n\ng"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("V")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("label")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 查询所有顶点的label")]),s._v("\n\ng"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("V")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("properties")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 查询所有顶点的属性")]),s._v("\n\ng"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("V")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("properties")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'name'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 查询所有顶点的“name”属性")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果无“name”属性的顶点将跳过")]),s._v("\n\ng"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("V")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("properties")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 查询所有顶点的属性值")]),s._v("\n\ng"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("V")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("valueMap")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 查询所有顶点的属性")]),s._v("\n\ng"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("V")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'name'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 查询所有顶点的“name”属性")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 效果等同于：")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// g.V().properties('name').value()")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//边也有类似操作，g.E().values()")]),s._v("\n\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br")])]),t("h2",{attrs:{id:"边的遍历"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#边的遍历"}},[s._v("#")]),s._v(" 边的遍历")]),s._v(" "),t("p",[s._v("以顶点为基准（也就是先有顶点，再去访问相关的边）")]),s._v(" "),t("p",[t("strong",[s._v("out(label):")]),s._v(" 根据指定的EdgeLabel来访问顶点的OUT方向邻接点（可以是零个EdgeLabel，代表所有类型边；也可以一个或多个"),t("strong",[s._v("EdgeLabel")]),s._v("，代表任意给定EdgeLabel的边，下同）\n"),t("strong",[s._v("in(label):")]),s._v(" 根据指定的EdgeLabel来访问顶点的IN方向邻接点\n"),t("strong",[s._v("both(label):")]),s._v(" 根据指定的EdgeLabel来访问顶点的双向邻接点\n"),t("strong",[s._v("outE(label):")]),s._v(" 根据指定的EdgeLabel来访问顶点的OUT方向邻接边\n"),t("strong",[s._v("inE(label):")]),s._v(" 根据指定的EdgeLabel来访问顶点的IN方向邻接边\n"),t("strong",[s._v("bothE(label):")]),s._v(" 根据指定的EdgeLabel来访问顶点的双向邻接边")]),s._v(" "),t("p",[s._v("比如")]),s._v(" "),t("div",{staticClass:"language-groovy line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-groovy"}},[t("code",[s._v("g"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("V")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("out")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//该图所有顶点的所有出边方向的邻接点，出边指该点->相邻的点，如果加上label，就是访问label类型的出边的邻接点")]),s._v("\ng"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("V")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'company'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//访问所有顶点的入边方向的类型为company的邻接点")]),s._v("\ng"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("V")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("outE")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'company'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//访问所有顶点的company类型出边")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("以边为基准（也就是从边开始去访问顶点）")]),s._v(" "),t("p",[t("strong",[s._v("outV():")]),s._v(" 访问边的出顶点，出顶点是指边的起始顶点\n"),t("strong",[s._v("inV():")]),s._v(" 访问边的入顶点，入顶点是指边的目标顶点，也就是箭头指向的顶点\n"),t("strong",[s._v("bothV():")]),s._v(" 访问边的双向顶点")]),s._v(" "),t("h2",{attrs:{id:"has条件过滤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#has条件过滤"}},[s._v("#")]),s._v(" has条件过滤")]),s._v(" "),t("p",[s._v("has语句是filter类型语句的代表，能够以顶点和边的属性作为过滤条件，决定哪些对象可以通过。")]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("hasLabel(label1，label2…):")]),s._v(" object的label与"),t("strong",[s._v("labels列表")]),s._v("中任何一个匹配就可以通过（可以只填一个）")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("hasId(id1，id2…):")]),s._v(" object的id满足ids列表中的任何一个就可以通过(可以只填一个)")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("has(key, value)")]),s._v(": 包含属性“key=value”的object通过，作用于顶点或者边")]),s._v(" "),t("ul",[t("li")])]),s._v(" "),t("li",[t("p",[s._v("has(label, key, value): 包含属性“key=value”且label值匹配的object通过，作用于顶点或者边")]),s._v(" "),t("ul",[t("li",[t("div",{staticClass:"language-groovy line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-groovy"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 查询“name”属性值为“云服务器 CVM”的顶点")]),s._v("\ng"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("V")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("has")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'name'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'云服务器 CVM'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("注意，要求对应节点的key必须建立了二级索引")])])])]),s._v(" "),t("li",[t("p",[s._v("has(key, predicate): 包含键为key且对应的value满足predicate的object通过，作用于顶点或者边")]),s._v(" "),t("ul",[t("li",[t("div",{staticClass:"language-groovy line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-groovy"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 查询“belongCloud”属性值为“腾讯云”的顶点")]),s._v("\ng"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("V")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("has")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'belongCloud'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("gt")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'腾讯云'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("只有当belongCloud是全文索引时支持这么搞")])])])]),s._v(" "),t("li",[t("p",[s._v("hasKey(keys…): object的属性键包含所有的keys列表成员才能通过，作用于顶点属性")])]),s._v(" "),t("li",[t("p",[s._v("hasValue(values…): object的属性值包含所有的values列表成员才能通过，作用于顶点属性")]),s._v(" "),t("ul",[t("li",[s._v("要求property")])])]),s._v(" "),t("li",[t("p",[s._v("has(key): 包含键为key的属性的object通过，"),t("strong",[s._v("作用于顶点或者边的properties值")])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("ex:"),t("code",[s._v("g.V().properties().hasKey('name')")])])]),s._v(" "),t("li",[t("h6",{attrs:{id:"特殊用法-直接将haskey-作用于顶点-仅后端是cassandra时支持"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#特殊用法-直接将haskey-作用于顶点-仅后端是cassandra时支持"}},[s._v("#")]),s._v(" 特殊用法：直接将"),t("code",[s._v("hasKey()")]),s._v("作用于顶点，仅后端是"),t("code",[s._v("Cassandra")]),s._v("时支持")]),s._v(" "),t("div",{staticClass:"language-groovy line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-groovy"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 查询包含属性“age”的顶点")]),s._v("\ng"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("V")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hasKey")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'age'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])])])]),s._v(" "),t("li",[t("p",[s._v("hasNot(key): 不包含键为key的属性的object通过，作用于顶点或者边")])])]),s._v(" "),t("h3",{attrs:{id:"结果数限制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#结果数限制"}},[s._v("#")]),s._v(" 结果数限制")]),s._v(" "),t("p",[s._v("**limit(x)😗*只返回结果中的x个")]),s._v(" "),t("h3",{attrs:{id:"数组分组与去重"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数组分组与去重"}},[s._v("#")]),s._v(" 数组分组与去重")]),s._v(" "),t("p",[t("strong",[s._v("数据分组")]),s._v("：从某个维度上对拥有相同点的数据进行分组，比如根据年龄分组、根据出生省份分组等。")]),s._v(" "),t("p",[s._v("**数据去重：**去除结果集中相同的元素，或者去除在某个维度上具有相同点的数据，比如根据年龄选出一些代表，每个年龄最多只能有一个人。")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("group():")]),s._v(" 对结果集进行分组，可通过by(property)来指定根据什么维度进行分组，"),t("strong",[s._v("可称维度为分组键")]),s._v("；"),t("strong",[s._v("如果不指定维度则以元素id作为分组键")]),s._v("，相当于重复的元素被分为一组。每一组由分组键+组内元素列表构成。如果有需要也可对每一组的元素列表进行reduce（聚合）操作，依然使用by()语句，如by(count())对组内元素计数。")]),s._v(" "),t("li",[t("strong",[s._v("groupCount():")]),s._v(" 对结果集进行分组，并统计每一组的元素个数。每一组由分组键+组内元素数量构成。")]),s._v(" "),t("li",[t("strong",[s._v("dedup():")]),s._v(" 去除结果集中相同的元素，可通过by(property)来指定根据什么维度进行去重。")]),s._v(" "),t("li",[t("strong",[s._v("by():")]),s._v(" 语义上一般指“根据什么维度”，与上述语句配合使用，如group().by()、dedup().by()等。也可与其它语句配合，如前面讲到的排序order().by()及路径path().by()等。")])]),s._v(" "),t("h3",{attrs:{id:"条件和过滤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#条件和过滤"}},[s._v("#")]),s._v(" 条件和过滤")]),s._v(" "),t("p",[s._v("在对图进行遍历分析时，经常需要对满足一定条件的对象进行过滤。where()就是用来过滤遍历过程中当前阶段的对象。另一方面，predicate就是过滤时使用的判断条件，包括关系运算和区间判断等，只有满足判断条件的对象才能通过进入下一轮或者作为结果。")]),s._v(" "),t("p",[s._v("where()常与select()或者match()配合使用，也可以单独使用。")]),s._v(" "),t("p",[s._v("以下是predicate的说明：")])])}),[],!1,null,null,null);t.default=e.exports}}]);