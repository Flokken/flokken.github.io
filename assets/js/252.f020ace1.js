(window.webpackJsonp=window.webpackJsonp||[]).push([[252],{580:function(t,a,s){"use strict";s.r(a);var e=s(4),i=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("raft算法也是paxos算法的一个变种，但是其被广泛应用，取得极大成功，因此有必要专门学习一下。")]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzIwODA2NjIxOA==&mid=2247484140&idx=1&sn=37876b5dda5294ea7f6211f0a3300ea5&chksm=97098129a07e083fe65f8b87c2ec516b630a8f210961038f0091fbcd69468b41edbe193891ee&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[t._v("条分缕析 Raft 算法 (qq.com)"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("《深入理解分布式系统》")]),t._v(" "),a("p",[t._v("[raft过程演示][https://thesecretlivesofdata.com/raft/]")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://pdos.csail.mit.edu/6.824/papers/raft-extended.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("raft-extend"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"目标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),a("p",[t._v("Raft 的目标（或者说是分布式共识算法的目标）是："),a("strong",[t._v("保证 log 完全相同地复制到多台服务器上")]),t._v("。")]),t._v(" "),a("blockquote",[a("p",[t._v("当然，复制log是为了实现去实现状态机复制")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/640",alt:"图片"}})]),t._v(" "),a("p",[t._v("只要每台服务器的日志相同，那么，在不同服务器上的状态机以相同顺序从日志中执行相同的命令，将会产生相同的结果。")]),t._v(" "),a("p",[t._v("共识算法的工作就是管理这些日志。")]),t._v(" "),a("h2",{attrs:{id:"系统模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#系统模型"}},[t._v("#")]),t._v(" 系统模型")]),t._v(" "),a("p",[t._v("我们假设：")]),t._v(" "),a("ul",[a("li",[t._v("服务器可能会宕机、会停止运行过段时间再恢复，但是"),a("strong",[t._v("非拜占庭的")]),t._v("（即它的行为是非恶意的，不会篡改数据等）；")]),t._v(" "),a("li",[t._v("网络通信会中断，消息可能会丢失、延迟或乱序；可能会网络分区；")])]),t._v(" "),a("p",[t._v("Raft 是基于 Leader 的共识算法，故主要考虑：")]),t._v(" "),a("ul",[a("li",[t._v("Leader 正常运行")]),t._v(" "),a("li",[t._v("Leader 故障，必须选出新的 Leader")])]),t._v(" "),a("p",[t._v("优点：只有一个 Leader，简单。")]),t._v(" "),a("p",[t._v("难点："),a("strong",[t._v("Leader 发生改变时，可能会使系统处于不一致的状态，因此，下一任 Leader 必须进行清理；")])]),t._v(" "),a("p",[t._v("我们将从 9个部分解释 Raft（根据论文来分的）：")]),t._v(" "),a("ol",[a("li",[t._v("Leader 选举；multi-paxos直接用server_id来选，存在日志落后的问题，Raft如何实现leader选举？")]),t._v(" "),a("li",[t._v("正常运行：日志复制（最简单的部分）；")]),t._v(" "),a("li",[t._v("Leader 变更时的安全性和一致性（最棘手、最关键的部分，领导者怎么做日志清理工作）；")]),t._v(" "),a("li",[t._v("处理旧 Leader：旧的 Leader 并没有真的下线怎么办（脑裂？）？")]),t._v(" "),a("li",[t._v("客户端交互：实现线性化语义(linearizable semantics)；")]),t._v(" "),a("li",[t._v("配置变更：如何在集群中增加或删除节点；")]),t._v(" "),a("li",[t._v("日志压缩。为例减少磁盘存储空间，同时快速让新节点跟上系统状态，"),a("strong",[t._v("Raft还会压缩日志生成快照。")])]),t._v(" "),a("li",[t._v("实现线性一致性。")]),t._v(" "),a("li",[t._v("性能优化")])]),t._v(" "),a("h2",{attrs:{id:"基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),a("h3",{attrs:{id:"服务器状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务器状态"}},[t._v("#")]),t._v(" 服务器状态")]),t._v(" "),a("p",[t._v("服务器在任意时间只能处于以下三种状态之一：")]),t._v(" "),a("ul",[a("li",[t._v("Leader（领导者）：处理所有客户端请求、日志复制。同一时刻最多只能有一个可行的 Leader；")]),t._v(" "),a("li",[t._v("Follower（跟随者）：完全被动的（不发送 RPC，只响应收到的 RPC）——大多数服务器在大多数情况下处于此状态；")]),t._v(" "),a("li",[t._v("Candidate（候选者）：用来选举新的 Leader，处于 Leader 和 Follower 之间的暂时状态；")])]),t._v(" "),a("p",[a("strong",[t._v("系统正常运行时，只有一个 Leader，其余都是 Followers.")])]),t._v(" "),a("p",[t._v("状态转换图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20231029211132453.png",alt:"image-20231029211132453"}})]),t._v(" "),a("h3",{attrs:{id:"任期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#任期"}},[t._v("#")]),t._v(" 任期")]),t._v(" "),a("p",[t._v("时间被划分成一个个的"),a("strong",[t._v("任期(Term)")]),t._v("，每个任期都由一个数字来表示任期号，任期号单调递增并且永远不会重复。")]),t._v(" "),a("p",[t._v("一个正常的任期至少有一个 Leader，通常分为两部分：")]),t._v(" "),a("ul",[a("li",[t._v("任期开始时的选举过程；")]),t._v(" "),a("li",[t._v("正常运行的部分；")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20231029211219617.png",alt:"image-20231029211219617"}})]),t._v(" "),a("p",[t._v("有些任期可能没有选出 Leader（如图 Term 3），这时候会立即进入下一个任期，再次尝试选出一个 Leader。")]),t._v(" "),a("p",[t._v("每个节点维护一个 "),a("code",[t._v("currentTerm")]),t._v(" 变量，表示系统中当前任期。"),a("code",[t._v("currentTerm")]),t._v(" "),a("strong",[t._v("必须持久化存储")]),t._v("，以便在服务器宕机重启时将其恢复。")]),t._v(" "),a("p",[t._v("**任期非常重要！任期能够帮助 Raft 识别过期的信息。**例如：如果 "),a("code",[t._v("currentTerm = 2")]),t._v(" 的节点与 "),a("code",[t._v("currentTerm = 3")]),t._v(" 的节点通信，我们可以知道第一个节点上的信息是过时的。")]),t._v(" "),a("p",[t._v("我们只使用最新任期的信息。后面我们会遇到各种情况，去检测和消除不是最新任期的信息。")]),t._v(" "),a("h3",{attrs:{id:"两个-rpc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两个-rpc"}},[t._v("#")]),t._v(" 两个 RPC")]),t._v(" "),a("p",[t._v("Raft 中服务器之间所有类型的通信通过两个 RPC 调用：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("RequestVote")]),t._v("：用于选举；")]),t._v(" "),a("li",[a("code",[t._v("AppendEntries")]),t._v("：用于复制 log 和发送心跳；")])]),t._v(" "),a("h2",{attrs:{id:"算法流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算法流程"}},[t._v("#")]),t._v(" 算法流程")]),t._v(" "),a("h3",{attrs:{id:"leader-选举"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#leader-选举"}},[t._v("#")]),t._v(" Leader 选举")]),t._v(" "),a("p",[a("strong",[t._v("启动")])]),t._v(" "),a("p",[t._v("Raft算法中刚启动的第一步就是要选出领导者。节点间的转换图如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20231029213207894.png",alt:"image-20231029213207894"}})]),t._v(" "),a("ul",[a("li",[t._v("节点启动时，都是 Follower 状态；")]),t._v(" "),a("li",[t._v("Follower 被动地接受 Leader 或 Candidate 的 RPC；")]),t._v(" "),a("li",[t._v("所以，如果 Leader 想要保持权威，必须向集群中的其它节点发送心跳包（空的 "),a("code",[t._v("AppendEntries RPC")]),t._v("）；")]),t._v(" "),a("li",[t._v("等待选举超时("),a("code",[t._v("electionTimeout")]),t._v("，一般在 150~300ms)后，Follower 没有收到任何 RPC：")]),t._v(" "),a("li",[a("ul",[a("li",[t._v("Follower 认为集群中没有 Leader")]),t._v(" "),a("li",[t._v("开始新的一轮选举")])])])]),t._v(" "),a("p",[a("strong",[t._v("选举")])]),t._v(" "),a("p",[t._v("当一个节点开始竞选：")]),t._v(" "),a("ul",[a("li",[t._v("增加自己的 "),a("code",[t._v("currentTerm")])]),t._v(" "),a("li",[t._v("转为 Candidate 状态，"),a("strong",[t._v("其目标是获取超过半数节点的选票，让自己成为 Leader")])]),t._v(" "),a("li",[a("strong",[t._v("先给自己投一票")])]),t._v(" "),a("li",[t._v("并行地向集群中其它节点发送 "),a("code",[t._v("RequestVote RPC")]),t._v(" 索要选票，如果没有收到指定节点的响应，它会反复尝试，直到发生以下三种情况之一：")])]),t._v(" "),a("ol",[a("li",[t._v("获得超过半数的选票：成为 Leader，并向其它节点发送 "),a("code",[t._v("AppendEntries")]),t._v(" 心跳；")]),t._v(" "),a("li",[t._v("收到来自 Leader 的 RPC：转为 Follower；")]),t._v(" "),a("li",[t._v("其它两种情况都没发生，没人能够获胜("),a("code",[t._v("electionTimeout")]),t._v(" 已过)：增加 "),a("code",[t._v("currentTerm")]),t._v("，开始新一轮选举；")])]),t._v(" "),a("p",[t._v("流程图如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20231029214231789.png",alt:"image-20231029214231789"}})]),t._v(" "),a("h4",{attrs:{id:"分裂选举-split-vote"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分裂选举-split-vote"}},[t._v("#")]),t._v(" 分裂选举（Split Vote）")]),t._v(" "),a("p",[t._v("指的是如果两个节点同时变为候选者，有可能导致选举出问题。")]),t._v(" "),a("p",[t._v("比如下面的B，D同时成为"),a("code",[t._v("Candidate")]),t._v("，然后他们也同时发出了"),a("code",[t._v("RequestVote")])]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20231120130556905.png",alt:"image-20231120130556905"}}),t._v(" "),a("p",[t._v("并且他们的"),a("code",[t._v("RequestVote")]),t._v("都先于另一个达到其他节点。所以这一次投票（"),a("code",[t._v("Term=4")]),t._v("），B，D获得了一样的票数。")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20231120130901838.png",alt:"image-20231120130901838"}}),t._v(" "),a("blockquote",[a("p",[t._v("这种情况非常巧合，只有出现不止一个候选者，并且没有一个候选者获得大多数票才会导致这种情况。")])]),t._v(" "),a("p",[t._v("此时所有节点会重新进入"),a("code",[t._v("election time")]),t._v(",然后任期增加，直到只有一个"),a("code",[t._v("Candidate")]),t._v("能获得"),a("code",[t._v("majority")]),t._v("并且成功担任leader")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20231120131241725.png",alt:"image-20231120131241725"}}),t._v(" "),a("p",[a("strong",[t._v("选举安全性")])]),t._v(" "),a("p",[t._v("选举过程需要保证两个特性："),a("strong",[t._v("安全性(safety)"),a("strong",[t._v("和")]),t._v("活性(liveness)")]),t._v("。")]),t._v(" "),a("p",[t._v("安全性(safety)：一个任期内只会有一个 Leader 被选举出来。需要保证：")]),t._v(" "),a("ul",[a("li",[t._v("每个节点在同一任期内只能投一次票，它将投给第一个满足条件的投票请求，然后拒绝其它 Candidate 的请求。这需要持久化存储投票信息 "),a("code",[t._v("votedFor")]),t._v("，以便宕机重启后恢复，否则重启后 "),a("code",[t._v("votedFor")]),t._v(" 丢失会导致投给别的节点；")]),t._v(" "),a("li",[t._v("只有获得超过半数节点的选票才能成为 Leader，也就是说，两个不同的 Candidate 无法在同一任期内都获得超过半数的票；")])]),t._v(" "),a("p",[t._v("活性(liveness)：确保最终能选出一个 Leader。")]),t._v(" "),a("p",[t._v("问题是：原则上我们可以无限重复分割选票，假如选举同一时间开始，同一时间超时，同一时间再次选举，如此循环。")]),t._v(" "),a("p",[t._v("解决办法很简单：")]),t._v(" "),a("ul",[a("li",[t._v("节点随机选择超时时间，通常在 [T, 2T] 之间（T = "),a("code",[t._v("electionTimeout")]),t._v("）")]),t._v(" "),a("li",[t._v("这样，节点不太可能再同时开始竞选，先竞选的节点有足够的时间来索要其他节点的选票")]),t._v(" "),a("li",[t._v("T >> broadcast time(T 远大于广播时间)时效果更佳")])]),t._v(" "),a("h3",{attrs:{id:"日志复制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日志复制"}},[t._v("#")]),t._v(" 日志复制")]),t._v(" "),a("p",[t._v("首先我们看一下Raft算法的日志格式。每个节点存储自己的日志副本（用变量log[]表示），日志中的每个日志条目(Log Entry)包含内容：")]),t._v(" "),a("ul",[a("li",[t._v("索引（Index）。索引表示该日志条目在整个日志中的位置")]),t._v(" "),a("li",[t._v("任期号。日志条目首次被领导者创建时的任期")]),t._v(" "),a("li",[t._v("命令。应用于状态机的命令")])]),t._v(" "),a("p",[a("strong",[t._v("Raft通过索引和任期号唯一的标识一条日志条目。")])]),t._v(" "),a("blockquote",[a("p",[t._v("之后讨论日志也只关心索引和日期号，不用关心具体命令是什么")])]),t._v(" "),a("p",[t._v("**日志必须持久化存储。**一个节点必须先将记录安全写到磁盘，才能向系统中其他节点返回响应。")]),t._v(" "),a("p",[t._v("**如果一条日志记录被存储在超过半数的节点上，我们认为该记录已提交("),a("code",[t._v("committed")]),t._v(")——这是 Raft 非常重要的特性！**如果一条记录已提交，意味着状态机可以安全地执行该记录。")]),t._v(" "),a("p",[t._v("在下图中，第 1-7 条记录被提交，第 8 条尚未提交。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20231029215808807.png",alt:"image-20231029215808807"}})]),t._v(" "),a("p",[a("strong",[t._v("正常运行")])]),t._v(" "),a("ul",[a("li",[t._v("客户端向 Leader 发送命令，希望该命令被所有状态机执行；")]),t._v(" "),a("li",[t._v("Leader 先将该命令追加到自己的日志中；")]),t._v(" "),a("li",[t._v("Leader 并行地向其它节点发送 "),a("code",[t._v("AppendEntries RPC")]),t._v("，等待响应；")]),t._v(" "),a("li",[t._v("收到超过半数节点的响应，则认为新的日志记录是被提交的：")]),t._v(" "),a("li",[a("ul",[a("li",[t._v("Leader 将命令传给自己的状态机，然后向客户端返回响应")]),t._v(" "),a("li",[t._v("此外，一旦 Leader 知道一条记录被提交了，将在后续的 "),a("code",[t._v("AppendEntries RPC")]),t._v(" 中通知已经提交记录的 Followers")]),t._v(" "),a("li",[t._v("Follower 将已提交的命令传给自己的状态机")])])]),t._v(" "),a("li",[t._v("如果 Follower 宕机/超时：Leader 将反复尝试发送 RPC；")]),t._v(" "),a("li",[t._v("性能优化：Leader 不必等待每个 Follower 做出响应，只需要超过半数的成功响应（确保日志记录已经存储在超过半数的节点上）——一个很慢的节点不会使系统变慢，因为 Leader 不必等他；\n"),a("ul",[a("li",[t._v("实际实现时，我们可以使用并发编程，而不是让主线程一直阻塞的等待RPC调用结果")])])])]),t._v(" "),a("p",[a("strong",[t._v("日志一致性")])]),t._v(" "),a("p",[t._v("Raft 尝试在集群中保持日志较高的一致性。")]),t._v(" "),a("p",[a("strong",[t._v("Raft 日志的 index 和 term 唯一标示一条日志记录。")]),t._v("（这非常重要！！！）")]),t._v(" "),a("ol",[a("li",[t._v("如果两个节点的日志在相同的索引位置上的任期号相同，则认为他们具有一样的命令；"),a("strong",[t._v("从头到这个索引位置之间的日志完全相同")]),t._v("；")]),t._v(" "),a("li",[a("strong",[t._v("如果给定的记录已提交，那么所有前面的记录也已提交")]),t._v("。")])]),t._v(" "),a("p",[a("strong",[a("code",[t._v("AppendEntries")]),t._v(" 一致性检查")])]),t._v(" "),a("p",[a("strong",[t._v("Raft 通过 "),a("code",[t._v("AppendEntries RPC")]),t._v(" 来检测这两个属性(term和index)。")])]),t._v(" "),a("ul",[a("li",[t._v("对于每个 "),a("code",[t._v("AppendEntries RPC")]),t._v(" 包含新日志记录"),a("strong",[t._v("之前那条记录的")]),t._v("索引("),a("code",[t._v("prevLogIndex")]),t._v(")和任期("),a("code",[t._v("prevLogTerm")]),t._v(")；")]),t._v(" "),a("li",[t._v("Follower 检查自己的 index 和 term 是否与 "),a("code",[t._v("prevLogIndex")]),t._v(" 和 "),a("code",[t._v("prevLogTerm")]),t._v(" 匹配，匹配则接收该记录；否则拒绝；如下图所示")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20231029220009096.png",alt:"image-20231029220009096"}})]),t._v(" "),a("blockquote",[a("p",[t._v("一致性检查的原理可以用数学归纳法证明：简单说就是，初始状态日志都是空的；其次，每追加一条日志都要通过一次性检查保证前一条日志是相同的，那么最后可得，这一条日志前面的所有日志一定也是相同的")])]),t._v(" "),a("h3",{attrs:{id:"领导者更替"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#领导者更替"}},[t._v("#")]),t._v(" 领导者更替")]),t._v(" "),a("p",[t._v("当新的 Leader 上任后，日志可能不会非常干净，因为前一任领导可能在完成日志复制之前就宕机了。"),a("strong",[t._v("Raft 对此的处理方式是：无需采取任何特殊处理。")])]),t._v(" "),a("p",[t._v("当新 Leader 上任后，他不会立即进行任何清理操作，他将会在正常运行期间进行清理。")]),t._v(" "),a("p",[t._v("原因是当一个新的 Leader 上任时，往往意味着有机器故障了，那些机器可能宕机或网络不通，所以没有办法立即清理他们的日志。在机器恢复运行之前，我们必须保证系统正常运行。")]),t._v(" "),a("p",[t._v("**大前提是 Raft 假设了 Leader 的日志始终是对的。**所以 Leader 要做的是，随着时间推移，让所有 Follower 的日志最终都与其匹配。")]),t._v(" "),a("p",[t._v("但与此同时，Leader 也可能在完成这项工作之前故障，日志会在一段时间内堆积起来，从而造成看起来相当混乱的情况，如下所示：")]),t._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20231030155925441.png"}}),t._v(" "),a("p",[t._v("如图，这种情况可能出现在 S4 和 S5 是任期 2、3、4 的 Leader，但不知何故，他们没有复制自己的日志记录就崩溃了，系统分区了一段时间，S1、S2、S3 轮流成为了任期 5、6、7 的 Leader，但无法与 S4、S5 通信以进行日志清理——所以我们看到的日志非常混乱。")]),t._v(" "),a("p",[a("strong",[t._v("唯一重要的是，索引 1-3 之间的记录是已提交的(已存在多数派节点)，因此我们必须确保留下它们")]),t._v("。")]),t._v(" "),a("p",[t._v("其它日志都是未提交的，我们还没有将这些命令传递给状态机，也没有客户端会收到这些执行的结果，所以不管是保留还是丢弃它们都无关紧要。")]),t._v(" "),a("p",[a("strong",[t._v("安全性要求")])]),t._v(" "),a("p",[a("font",{attrs:{color:"red",size:"3"}},[t._v("一旦状态机执行了一条日志里的命令，必须确保其它状态机在同样索引的位置不会执行不同的命令。")]),t._v("****")],1),t._v(" "),a("p",[t._v("Raft算法的安全性就是为了保证状态机复制执行相同的命令。")]),t._v(" "),a("p",[t._v("Raft 安全性(Safety)要求："),a("strong",[t._v("如果某条日志记录在某个任期号已提交，那么这条记录必然出现在更大任期号的未来 Leader 的日志中。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20231030160905323.png",alt:"image-20231030160905323"}})]),t._v(" "),a("p",[t._v("这保证了安全性要求：")]),t._v(" "),a("ul",[a("li",[t._v("Leader 不会覆盖日志中的记录；")]),t._v(" "),a("li",[t._v("只有 Leader 的日志中的记录才能被提交；")]),t._v(" "),a("li",[t._v("在应用到状态机之前，日志必须先被提交；")])]),t._v(" "),a("p",[a("strong",[t._v("这决定我们要修改选举程序（选举限制）：")])]),t._v(" "),a("ul",[a("li",[t._v("如果节点的日志中没有正确的日志，需要避免其成为 Leader；")]),t._v(" "),a("li",[t._v("稍微修改 committed 的定义（"),a("em",[t._v("即前面提到的要稍作修改")]),t._v("）：前面说多数派存储即是已提交的，**但在某些时候，我们必须延迟提交日志记录，**直到我们知道这条记录是安全的，"),a("strong",[t._v("所谓安全的，就是我们认为后续 Leader 也会有这条日志")]),t._v("。")])]),t._v(" "),a("h4",{attrs:{id:"延迟提交-选出最佳-leader"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#延迟提交-选出最佳-leader"}},[t._v("#")]),t._v(" 延迟提交，选出最佳 Leader")]),t._v(" "),a("p",[t._v("现在我们具体来思考，我们如何"),a("strong",[t._v("确保选出了一个很好地保存了所有已提交日志的 Leader")]),t._v(" ？")]),t._v(" "),a("p",[t._v("这有点棘手，举个例子：假设我们要在下面的集群中选出一个新 Leader，但此时第三台服务器不可用。")]),t._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20231030162215309.png",alt:"image-20231030162215309"}}),t._v(" "),a("p",[t._v("这种情况下，仅看前两个节点的日志我们无法确认是否达成多数派，故无法确认第五条日志是否已提交。")]),t._v(" "),a("p",[t._v("那怎么办呢？")]),t._v(" "),a("p",[t._v("Raft通过比较日志，在选举期间，选择最有可能包含所有已提交的日志，具体流程是：")]),t._v(" "),a("ul",[a("li",[t._v("Candidate 在 "),a("code",[t._v("RequestVote RPCs")]),t._v(" 中包含自己的日志信息中的"),a("strong",[t._v("最后一条记录的 index 和 term")]),t._v("，记为 "),a("code",[t._v("lastIndex")]),t._v(" 和 "),a("code",[t._v("lastTerm")]),t._v("；")]),t._v(" "),a("li",[t._v("收到此投票请求的服务器 V 将比较谁的日志更完整："),a("code",[t._v("(lastTermV > lastTermC) ||(lastTermV == lastTermC) && (lastIndexV > lastIndexC)")]),t._v(" 将拒绝投票；（即：V 的任期比 C 的任期新，或任期相同但 V 的日志比 C 的日志更完整）；")]),t._v(" "),a("li",[t._v("无论谁赢得选举，可以确保 Leader 和超过半数投票给它的节点中拥有最完整的日志——"),a("strong",[t._v("最完整的意思就是 index 和 term 这对唯一标识是最大的")]),t._v("。")])]),t._v(" "),a("blockquote",[a("p",[t._v("Raft算法的选举限制保证选举出来的领导者日志任期最新，日志长度也最完整，"),a("strong",[t._v("这样能够避免领导者去追赶其他节点日志而造成系统堵塞（multi-Paxos中就存在leader日志可能落后太多的问题）。")])])]),t._v(" "),a("h4",{attrs:{id:"延迟提交举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#延迟提交举例"}},[t._v("#")]),t._v(" 延迟提交举例")]),t._v(" "),a("p",[a("strong",[t._v("Case 1: Leader 决定提交日志")])]),t._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20231030164916171.png",alt:"image-20231030164916171"}}),t._v(" "),a("p",[t._v("任期 2 的 Leader S1 的 index = 4 日志刚刚被复制到 S3，并且 Leader 可以看到 index = 4 已复制到超过半数的服务器，那么该日志可以提交，并且安全地应用到状态机。")]),t._v(" "),a("p",[t._v("现在，这条记录是安全的，下一任期的 Leader 必须包含此记录，"),a("strong",[t._v("因此 S4 和 S5 都不可能从其它节点那里获得选票：S5 任期太旧，S4 日志太短。")])]),t._v(" "),a("p",[t._v("只有前三台中的一台可以成为新的 Leader。S1 可以，S2、S3 也可以通过获取 S4 和 S5 的选票成为 Leader。")]),t._v(" "),a("p",[a("strong",[t._v("Case 2: Leader 试图提交之前任期的日志")])]),t._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20231030165241712.png",alt:"image-20231030165241712"}}),t._v(" "),a("p",[t._v("如图所示的情况，在任期 2 时记录仅写在 S1 和 S2 两个节点上，由于某种原因，任期 3 的 Leader S5 并不知道这些记录，S5 创建了自己的三条记录然后宕机了，"),a("strong",[t._v("然后任期 4 的 Leader S1 被选出，S1 试图与其它服务器的日志进行匹配。因此它复制了任期 2 的日志到 S3。")])]),t._v(" "),a("p",[a("strong",[t._v("此时 index=3 的记录时是不安全的，不能提交")]),t._v("。")]),t._v(" "),a("p",[t._v("因为 领导者S1 可能在提交后立即宕机，由于S5的日志更长，所以S5从 S2、S3、S4 获得选票成为任期 5 的 Leader。")]),t._v(" "),a("p",[t._v("一旦 S5 成为新 Leader，它将覆盖 index=3-5 的日志，S1-S3 的这些记录都将消失。"),a("strong",[t._v("这不符合已提交的日志不能被修改的规则")])]),t._v(" "),a("p",[a("strong",[t._v("我们还要需要一条新的规则，来处理这种情况。")])]),t._v(" "),a("h4",{attrs:{id:"延迟提交之前的任期的日志目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#延迟提交之前的任期的日志目录"}},[t._v("#")]),t._v(" 延迟提交之前的任期的日志目录")]),t._v(" "),a("p",[t._v("新的选举不足以保证日志安全，我们还需要继续修改 commit 规则。")]),t._v(" "),a("p",[t._v("Leader 要提交一条日志：")]),t._v(" "),a("ul",[a("li",[t._v("日志必须存储在超过半数的节点上；")]),t._v(" "),a("li",[a("strong",[t._v("Leader 必须看到：超过半数的节点上还必须存储着至少一条自己任期内的日志")]),t._v("；")])]),t._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20231030165718965.png",alt:"image-20231030165718965"}}),t._v(" "),a("p",[t._v("以上面的Case2为例，当 index = 3 & term = 2 被复制到 S3 时，它还不能提交该记录，必须等到 term = 4 的记录存储在超过半数的节点上，此时 index = 3 和 index = 4 可以认为是已提交。")]),t._v(" "),a("p",[a("strong",[t._v("此时 S5 无法赢得选举了，它无法从 S1-S3 获得选票。")])]),t._v(" "),a("p",[a("font",{attrs:{color:"red",size:"3"}},[a("strong",[t._v("结合新的选举规则和 commit 规则，我们可以保证 Raft 的安全性。")])])],1),t._v(" "),a("blockquote",[a("p",[t._v("但是还有一点问题，论文里还提到了一种复杂的情况：如果一直没有新的client时，会导致一些问题，然后引出Raft引入的no-op日志。以后再来补充")]),t._v(" "),a("p",[t._v("no-op日志：只有索引和任期号，没有命令，这类日志只是为了保证日志权威性，不会改变状态机输入输出。")])]),t._v(" "),a("h4",{attrs:{id:"清理不一致日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#清理不一致日志"}},[t._v("#")]),t._v(" 清理不一致日志")]),t._v(" "),a("p",[t._v("领导者更替还可能产生不一致的日志。上面展示的是会影响状态机安全的情况，下面的情况是可以需要设计来解决的情况：")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20231030171952480.png",alt:"image-20231030171952480"}}),t._v(" "),a("p",[t._v("从上可以看出，系统中仍然存在两种不一样日志：缺失的条目(Missing Entries)和多出来的条目(Extroneous  Entries)。")]),t._v(" "),a("p",[t._v("新的 Leader 必须使 Follower 的日志与自己的日志保持一致，需要：")]),t._v(" "),a("ul",[a("li",[t._v("删除 Extraneous Entries；")]),t._v(" "),a("li",[t._v("补齐 Missing Entries；")])]),t._v(" "),a("p",[t._v("为了清理不一致的日志，Leader 为每个 Follower 保存 "),a("code",[t._v("nextIndex[]")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("用来表示下一个要发送给 Follower 的日志索引；")]),t._v(" "),a("li",[t._v("对于跟随者i，leader上的"),a("code",[t._v("nextIndex[i]")]),t._v("初始化为：1 + Leader 最后一条日志的索引；")])]),t._v(" "),a("p",[t._v("Leader 通过 "),a("code",[t._v("nextIndex")]),t._v(" 来修复日志。当 "),a("code",[t._v("AppendEntries RPC")]),t._v(" 一致性检查失败，递减 "),a("code",[t._v("nextIndex")]),t._v(" 并重试。如下图所示：")]),t._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20231030172557081.png",alt:"image-20231030172557081"}}),t._v(" "),a("p",[t._v("对于 a：")]),t._v(" "),a("ul",[a("li",[t._v("一开始 "),a("code",[t._v("nextIndex")]),t._v(" = 11，带上日志 index = 10 & term = 6，检查失败；")]),t._v(" "),a("li",[a("code",[t._v("nextIndex")]),t._v(" = 10，带上日志 index = 9 & term = 6，检查失败；")]),t._v(" "),a("li",[t._v("如此反复，直到 "),a("code",[t._v("nextIndex")]),t._v(" = 5，带上日志 index = 4 & term = 4，该日志现在匹配，会在 a 中补齐 Leader 的日志。如此往下补齐。")])]),t._v(" "),a("p",[t._v("对于 b：\n会一直检查到 "),a("code",[t._v("nextIndex")]),t._v(" = 4 才匹配。值得注意的是，对于 b 这种情况，当 Follower 覆盖不一致的日志时，它将删除所有后续的日志记录（任何无关紧要的记录之后的记录也都是无关紧要的）。如下图所示：")]),t._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20231030172616977.png",alt:"image-20231030172616977"}}),t._v(" "),a("h4",{attrs:{id:"处理旧leader"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#处理旧leader"}},[t._v("#")]),t._v(" 处理旧Leader")]),t._v(" "),a("p",[t._v("实际上，老的 Leader 可能不会马上消失，例如：网络分区将 Leader 与集群的其余部分分隔，其余部分选举出了一个新的 Leader。问题在于，如果老的 Leader 重新连接，也不知道新的 Leader 已经被选出来，它会尝试作为 Leader 继续提交日志。此时如果有客户端向老 Leader 发送请求，老的 Leader 会尝试存储该命令并向其它节点复制日志——我们必须阻止这种情况发生。")]),t._v(" "),a("p",[a("strong",[t._v("任期就是用来发现过时的 Leader")]),t._v("(和 Candidates)：")]),t._v(" "),a("ul",[a("li",[t._v("每个 RPC 都包含发送方的任期；")]),t._v(" "),a("li",[t._v("如果发送方的任期太老，无论哪个过程，RPC 都会被拒绝，发送方转变到 Follower 并更新其任期；")]),t._v(" "),a("li",[t._v("如果接收方的任期太老，接收方将转为 Follower，更新它的任期，然后正常的处理 RPC；")])]),t._v(" "),a("p",[t._v("由于新 Leader 的选举会更新超过半数服务器的任期，旧的 Leader 不能提交新的日志，因为它会联系至少一台多数派集群的节点，然后发现自己任期太老，会转为 Follower 继续工作。")]),t._v(" "),a("h2",{attrs:{id:"客户端协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#客户端协议"}},[t._v("#")]),t._v(" 客户端协议")]),t._v(" "),a("p",[a("strong",[t._v("Raft算法要求必须是领导者来处理客户端请求。")])]),t._v(" "),a("p",[t._v("客户端只将命令发送到 Leader：")]),t._v(" "),a("ul",[a("li",[t._v("如果客户端不知道 Leader 是谁，它会和任意一台服务器通信；")]),t._v(" "),a("li",[t._v("如果通信的节点不是 Leader，它会告诉客户端 Leader 是谁；")])]),t._v(" "),a("p",[t._v("Leader 直到将命令记录、提交和执行到状态机之前，不会做出响应。")]),t._v(" "),a("p",[t._v("这里的问题是如果 Leader 宕机会导致请求超时：")]),t._v(" "),a("ul",[a("li",[t._v("客户端重新发出命令到其他服务器上，最终重定向到新的 Leader")]),t._v(" "),a("li",[t._v("用新的 Leader 重试请求，直到命令被执行")])]),t._v(" "),a("p",[t._v("这留下了一个命令可能被执行两次的风险（Multi-paxos中也有一样的问题）——Leader 可能在执行命令之后但响应客户端之前宕机，此时客户端再去寻找下一个 Leader，同一个命令就会被执行两次——这是不可接受的！")]),t._v(" "),a("p",[t._v("解决办法是：客户端发送给 Leader 的每个命令都带上一个唯一 id")]),t._v(" "),a("ul",[a("li",[t._v("Leader 将唯一 id 写到日志记录中")]),t._v(" "),a("li",[t._v("在 Leader 接受命令之前，先检查其日志中是否已经具有该 id")]),t._v(" "),a("li",[t._v("如果 id 在日志中，说明是重复的请求，则忽略新的命令，返回旧命令的响应")])]),t._v(" "),a("p",[a("strong",[t._v("每个命令只会被执行一次，这就是所谓的线性化的关键要素")]),t._v("。")]),t._v(" "),a("blockquote",[a("p",[t._v("这部分和Multi-paxos很像")])]),t._v(" "),a("h2",{attrs:{id:"配置变更"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置变更"}},[t._v("#")]),t._v(" 配置变更")]),t._v(" "),a("p",[t._v("随着时间推移，会有机器故障需要我们去替换它，或者修改节点数量，需要有一些机制来变更系统配置，并且是安全、自动的方式，无需停止系统。")]),t._v(" "),a("p",[t._v("系统配置是指：")]),t._v(" "),a("ul",[a("li",[t._v("每台服务器的 id 和地址")]),t._v(" "),a("li",[a("strong",[t._v("系统配置信息是非常重要的，它决定了多数派的组成")])])]),t._v(" "),a("p",[t._v("首先要意识到，我们不能直接从旧配置切换到新配置，这可能会导致矛盾的多数派。")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20231030173350351.png",alt:"image-20231030173350351"}}),t._v(" "),a("p",[t._v("如图，系统以三台服务器的配置运行着，此时我们要添加两台服务器。"),a("strong",[t._v("如果我们直接修改配置，他们可能无法完全在同一时间做到配置切换，这会导致 S1 和 S2 形成旧集群的多数派，而同一时间 S3-S5 已经切换到新配置，这会产生两个集群。")])]),t._v(" "),a("p",[t._v("这说明我们必须使用一个"),a("strong",[t._v("两阶段(two-phase)协议。")])]),t._v(" "),a("p",[a("strong",[t._v("联合共识(Joint Consensus)")])]),t._v(" "),a("p",[t._v("Raft 通过联合公式(Joint Consensus)来完成两阶段协议，即："),a("strong",[t._v("新、旧两种配置上都获得多数派选票")]),t._v("。")]),t._v(" "),a("blockquote",[a("p",[t._v("Raft的作者曾经说过：如果有人告诉你，他可以在分布式系统中一个阶段就做出决策，你应该非常认真地询问他，因为他要么错了，要么发现了世界上所有人都不知道的东西。")])]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20231030195636043.png",alt:"image-20231030195636043"}}),t._v(" "),a("p",[t._v("第一阶段：")]),t._v(" "),a("ul",[a("li",[t._v("Leader收到"),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:"MJX-TEX"},[a("mjx-msub",[a("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[a("mjx-c",{attrs:{c:"C"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[a("mjx-TeXAtom",{attrs:{size:"s"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"n"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"e"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"w"}})],1)],1)],1)],1)],1)],1),t._v("的配置变更请求后，先写入一条"),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:"MJX-TEX"},[a("mjx-msub",[a("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[a("mjx-c",{attrs:{c:"C"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[a("mjx-TeXAtom",{attrs:{size:"s"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"o"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"l"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"d"}})],1),a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"+"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"n"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"e"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"w"}})],1)],1)],1)],1)],1)],1),t._v("的日志，配置变更立即生效。并且通过"),a("code",[t._v("AppendEntries")]),t._v("消息将日志复制到跟随者上，收到"),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:"MJX-TEX"},[a("mjx-msub",[a("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[a("mjx-c",{attrs:{c:"C"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[a("mjx-TeXAtom",{attrs:{size:"s"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"o"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"l"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"d"}})],1),a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"+"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"n"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"e"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"w"}})],1)],1)],1)],1)],1)],1),t._v("日志的节点立即应用该配置作为当前节点的配置；")],1),t._v(" "),a("li",[t._v("当"),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:"MJX-TEX"},[a("mjx-msub",[a("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[a("mjx-c",{attrs:{c:"C"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[a("mjx-TeXAtom",{attrs:{size:"s"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"o"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"l"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"d"}})],1),a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"+"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"n"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"e"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"w"}})],1)],1)],1)],1)],1)],1),t._v("日志被复制到多数派节点上时，"),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:"MJX-TEX"},[a("mjx-msub",[a("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[a("mjx-c",{attrs:{c:"C"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[a("mjx-TeXAtom",{attrs:{size:"s"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"o"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"l"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"d"}})],1),a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"+"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"n"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"e"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"w"}})],1)],1)],1)],1)],1)],1),t._v("的日志就被领导者提交。")],1)]),t._v(" "),a("p",[a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:"MJX-TEX"},[a("mjx-msub",[a("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[a("mjx-c",{attrs:{c:"C"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[a("mjx-TeXAtom",{attrs:{size:"s"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"o"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"l"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"d"}})],1),a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"+"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"n"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"e"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"w"}})],1)],1)],1)],1)],1)],1),t._v("日志已提交保证了后续任何Leader一定有"),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:"MJX-TEX"},[a("mjx-msub",[a("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[a("mjx-c",{attrs:{c:"C"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[a("mjx-TeXAtom",{attrs:{size:"s"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"o"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"l"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"d"}})],1),a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"+"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"n"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"e"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"w"}})],1)],1)],1)],1)],1)],1),t._v("日志，Leader选举过程必须获得旧配置中的多数派和新配置中的多数派同时投票。")],1),t._v(" "),a("p",[a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:"MJX-TEX"},[a("mjx-msub",[a("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[a("mjx-c",{attrs:{c:"C"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[a("mjx-TeXAtom",{attrs:{size:"s"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"o"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"l"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"d"}})],1),a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"+"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"n"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"e"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"w"}})],1)],1)],1)],1)],1)],1),t._v("提交后，就进入第二阶段：")],1),t._v(" "),a("ul",[a("li",[t._v("进入第二阶段后，领导者立即写入一条"),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:"MJX-TEX"},[a("mjx-msub",[a("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[a("mjx-c",{attrs:{c:"C"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[a("mjx-TeXAtom",{attrs:{size:"s"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"n"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"e"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"w"}})],1)],1)],1)],1)],1)],1),t._v("的日志，并将该日志通过"),a("code",[t._v("AppendEntries")]),t._v("消息复制到跟随者上，收到"),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:"MJX-TEX"},[a("mjx-msub",[a("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[a("mjx-c",{attrs:{c:"C"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[a("mjx-TeXAtom",{attrs:{size:"s"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"n"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"e"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"w"}})],1)],1)],1)],1)],1)],1),t._v("日志的跟随者立即应用该配置作为当前节点的配置。")],1),t._v(" "),a("li",[a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:"MJX-TEX"},[a("mjx-msub",[a("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[a("mjx-c",{attrs:{c:"C"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[a("mjx-TeXAtom",{attrs:{size:"s"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"n"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"e"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"w"}})],1)],1)],1)],1)],1)],1),t._v("日志复制到多数节点上时，说明"),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:"MJX-TEX"},[a("mjx-msub",[a("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[a("mjx-c",{attrs:{c:"C"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[a("mjx-TeXAtom",{attrs:{size:"s"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"n"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"e"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"w"}})],1)],1)],1)],1)],1)],1),t._v("的日志已提交，在"),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:"MJX-TEX"},[a("mjx-msub",[a("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[a("mjx-c",{attrs:{c:"C"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[a("mjx-TeXAtom",{attrs:{size:"s"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"n"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"e"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"w"}})],1)],1)],1)],1)],1)],1),t._v("日志提交之后，后续配置都基于"),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:"MJX-TEX"},[a("mjx-msub",[a("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[a("mjx-c",{attrs:{c:"C"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[a("mjx-TeXAtom",{attrs:{size:"s"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"n"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"e"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"w"}})],1)],1)],1)],1)],1)],1),t._v("了")],1)]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20231030202141784.png",alt:"image-20231030202141784"}}),t._v(" "),a("p",[t._v("Joint Consensus 还有一些细节：")]),t._v(" "),a("ul",[a("li",[t._v("变更过程中，来自新旧配置的节点都有可能成为 Leader；")]),t._v(" "),a("li",[t._v("如果当前 Leader 不在"),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:"MJX-TEX"},[a("mjx-msub",[a("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[a("mjx-c",{attrs:{c:"C"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[a("mjx-TeXAtom",{attrs:{size:"s"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"n"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"e"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"w"}})],1)],1)],1)],1)],1)],1),t._v(" 配置里面，一旦 "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:"MJX-TEX"},[a("mjx-msub",[a("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[a("mjx-c",{attrs:{c:"C"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[a("mjx-TeXAtom",{attrs:{size:"s"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"n"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"e"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"w"}})],1)],1)],1)],1)],1)],1),t._v("提交，它必须下台(step down)。")],1)]),t._v(" "),a("p",[t._v("如图所示，旧 Leader 不再是新配置的成员之后，还有可能继续服务一小段时间；即旧 Leader 可能在 "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:"MJX-TEX"},[a("mjx-msub",[a("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[a("mjx-c",{attrs:{c:"C"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[a("mjx-TeXAtom",{attrs:{size:"s"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"n"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"e"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"w"}})],1)],1)],1)],1)],1)],1),t._v("配置下继续当 Leader（虽然实质上并不是Leader），直到 "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:"MJX-TEX"},[a("mjx-msub",[a("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[a("mjx-c",{attrs:{c:"C"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[a("mjx-TeXAtom",{attrs:{size:"s"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"n"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"e"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"w"}})],1)],1)],1)],1)],1)],1),t._v("的日志复制到多数派上而 committed后，旧领导者就要下台。")],1),t._v(" "),a("blockquote",[a("p",[t._v("这里如何解决也是一个点，之后再学习吧，先记住结论。")])]),t._v(" "),a("h2",{attrs:{id:"线性一致性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线性一致性"}},[t._v("#")]),t._v(" 线性一致性")]),t._v(" "),a("blockquote",[a("p",[t._v("以后补充")])])])}),[],!1,null,null,null);a.default=i.exports}}]);