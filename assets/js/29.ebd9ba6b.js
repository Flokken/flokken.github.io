(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{358:function(s,n,t){"use strict";t.r(n);var a=t(4),e=Object(a.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("blockquote",[n("p",[s._v("参考：")]),s._v(" "),n("p",[s._v("https://zhuanlan.zhihu.com/p/32703794")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://www.w3.org/TR/rdf-sparql-query/",target:"_blank",rel:"noopener noreferrer"}},[s._v("SPARQL语法"),n("OutboundLink")],1)])]),s._v(" "),n("h2",{attrs:{id:"一、sparql"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一、sparql"}},[s._v("#")]),s._v(" 一、SPARQL")]),s._v(" "),n("p",[s._v("SPARQL即SPARQL Protocol and RDF Query Language的递归缩写，专门用于访问和操作RDF数据，是语义网的核心技术之一。W3C的RDF数据存取小组（RDF Data Access Working Group, RDAWG）对其进行了标准化。在2008年，SPARQL 1.0成为W3C官方所推荐的标准。2013年发布了SPARQL 1.1。相对第一个版本，其支持RDF图的更新，提供更强大的查询，比如：子查询、聚合操作（像我们常用的count）等等。")]),s._v(" "),n("p",[s._v("从SPARQL的全称我们可以知道，其由两个部分组成：协议和查询语言。")]),s._v(" "),n("ol",[n("li",[n("p",[s._v("查询语言很好理解，就像SQL用于查询关系数据库中的数据，XQuery用于查询XML数据，SPARQL用于查询RDF数据。")])]),s._v(" "),n("li",[n("p",[s._v("协议是指我们可以通过HTTP协议在客户端和SPARQL服务器（SPARQL endpoint）之间传输查询和结果，这也是和其他查询语言最大的区别。")])])]),s._v(" "),n("p",[s._v("一个SPARQL查询本质上是一个带有变量的RDF图，以我们之前提到的罗纳尔多RDF数据为例：")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('&lt;http://www.kg.com/person/1> &lt;http://www.kg.com/ontology/chineseName> "罗纳尔多·路易斯·纳萨里奥·德·利马"^^string.\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[n("strong",[s._v("我们把属性值用变量代替（SPARQL中，用问号加变量名的方式来表示一个变量。")]),s._v("），即：")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("&lt;http://www.kg.com/person/1> &lt;http://www.kg.com/ontology/chineseName> ?x.\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v('SPARQL查询是基于图匹配的思想。我们把上述的查询与RDF图进行匹配，找到符合该匹配模式的所有子图，最后得到变量的值。就上面这个例子而言，在RDF图中找到匹配的子图后，将"罗纳尔多·路易斯·纳萨里奥·德·利马"和“?x”绑定，我们就得到最后的结果。简而言之，SPARQL查询分为三个步骤：')]),s._v(" "),n("ol",[n("li",[n("p",[s._v("构建查询图模式，表现形式就是带有变量的RDF。")])]),s._v(" "),n("li",[n("p",[s._v("匹配，匹配到符合指定图模式的子图。")])]),s._v(" "),n("li",[n("p",[s._v("绑定，将结果绑定到查询图模式对应的变量上。")])])]),s._v(" "),n("h2",{attrs:{id:"二、例子"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二、例子"}},[s._v("#")]),s._v(" 二、例子")]),s._v(" "),n("p",[s._v("以实践篇的RDF电影数据为例，我们介绍如何利用SPARQL查询：")]),s._v(" "),n("ol",[n("li",[n("p",[s._v("所有的RDF三元组。")])]),s._v(" "),n("li",[n("p",[s._v("周星驰出演了哪些电影？")])]),s._v(" "),n("li",[n("p",[s._v("英雄这部电影有哪些演员参演？")])]),s._v(" "),n("li",[n("p",[s._v("巩俐参演的评分大于7的电影有哪些？")])])]),s._v(" "),n("p",[s._v("如何查询所有数据？参照我们在第一个部分介绍的查询过程，查询所有数据即我们没有任何已知值，SPO三元组每个都是未知变量。对应的SPARQL查询语言为：")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("PREFIX : &lt;http://www.kgdemo.com#>\nPREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX owl: &lt;http://www.w3.org/2002/07/owl#>\nPREFIX xsd: &lt;XML Schema>\nPREFIX vocab: &lt;http://localhost:2020/resource/vocab/>\nPREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#>\nPREFIX map: &lt;http://localhost:2020/resource/#>\nPREFIX db: &lt;http://localhost:2020/resource/>\n\nSELECT * WHERE {\n  ?s ?p ?o\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("SPARQL的部分关键词：")]),s._v(" "),n("ul",[n("li",[s._v("SELECT， 指定我们要查询的变量。在这里我们查询所有的变量，用*代替。")]),s._v(" "),n("li",[s._v("WHERE，指定我们要查询的图模式。含义上和SQL的WHERE没有区别。")]),s._v(" "),n("li",[s._v("FROM，指定查询的RDF数据集。我们这里只有一个图，因此省去了FROM关键词。")]),s._v(" "),n("li",[s._v("PREFIX，用于IRI的缩写。")]),s._v(" "),n("li",[s._v("大写的PREFIX代表前缀，把IRL缩写为前缀")])]),s._v(" "),n("p",[s._v("注意，写前缀时不用加.，只有{}里的语句需要加.,因为里面的就是图模式的RDF。")]),s._v(" "),n("p",[s._v("下面是该语句的部分查询结果：")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('       s                   p             o\n\ndb:genre/12 [http]\t:genreName\t"冒险"\ndb:genre/12 [http]\trdf:type\t:Genre\ndb:genre/14 [http]\t:genreName\t"奇幻"\ndb:genre/14 [http]\trdf:type\t:Genre\ndb:genre/16 [http]\t:genreName\t"动画"\ndb:genre/16 [http]\trdf:type\t:Genre\ndb:genre/18 [http]\t:genreName \t"剧情"\ndb:genre/18 [http]\trdf:type\t:Genre\ndb:genre/27 [http]\t:genreName\t"恐怖"\ndb:genre/27 [http]\trdf:type    :Genre\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("“周星驰出演了哪些电影”：")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("PREFIX : &lt;http://www.kgdemo.com#>\nPREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX owl: &lt;http://www.w3.org/2002/07/owl#>\nPREFIX xsd: &lt;XML Schema>\nPREFIX vocab: &lt;http://localhost:2020/resource/vocab/>\nPREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#>\nPREFIX map: &lt;http://localhost:2020/resource/#>\nPREFIX db: &lt;http://localhost:2020/resource/>\n\nSELECT ?n WHERE {\n  ?s rdf:type :Person.\n  ?s :personName '周星驰'.\n  ?s :hasActedIn ?o.\n  ?o :movieTitle ?n\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("p",[s._v("部分结果：")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('n\n\n"功夫"\n"琉璃樽"\n"英雄本色"\n"少林足球"\n"西游记第壹佰零壹回之月光宝盒"\n"长江七号"\n"西游记大结局之仙履奇缘"\n"建国大业"\n"审死官"\n"龙在天涯"\n"大内密探零零发"\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[s._v('就我们这个例子而言，可以不要“?s rdf:type :Person”，这里只是让查询图更具体（在拥有复杂关系的RDF图中，可能会存在不同的类拥有相同的属性名。比如，猫和狗名字的属性名都是"name"，我们想查询一只叫汤姆的猫；如果不指定类型，返回结果可能也包含一只叫汤姆的狗）。'),n("strong",[s._v("图模式中，每个RDF用英文句号进行分割")]),s._v("。")]),s._v(" "),n("p",[s._v("“英雄这部电影有哪些演员参演”：")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("PREFIX : &lt;http://www.kgdemo.com#>\nPREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX owl: &lt;http://www.w3.org/2002/07/owl#>\nPREFIX xsd: &lt;XML Schema>\nPREFIX vocab: &lt;http://localhost:2020/resource/vocab/>\nPREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#>\nPREFIX map: &lt;http://localhost:2020/resource/#>\nPREFIX db: &lt;http://localhost:2020/resource/>\n\nSELECT ?n WHERE {\n  ?s rdf:type :Movie.\n  ?s :movieTitle '英雄'.\n  ?a :hasActedIn ?s.\n  ?a :personName ?n\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("p",[s._v("结果：")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('n\n\n"李连杰"\n"梁朝伟"\n"张曼玉"\n"章子怡"\n"甄子丹"\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("“巩俐参演的评分大于7的电影有哪些”：")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("PREFIX : &lt;http://www.kgdemo.com#>\nPREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX owl: &lt;http://www.w3.org/2002/07/owl#>\nPREFIX xsd: &lt;XML Schema>\nPREFIX vocab: &lt;http://localhost:2020/resource/vocab/>\nPREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#>\nPREFIX map: &lt;http://localhost:2020/resource/#>\nPREFIX db: &lt;http://localhost:2020/resource/>\n\nSELECT ?n WHERE {\n  ?s rdf:type :Person.\n  ?s :personName '巩俐'.\n  ?s :hasActedIn ?o.\n  ?o :movieTitle ?n.\n  ?o :movieRating ?r.\nFILTER (?r >= 7)\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("p",[s._v("结果：")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('n\n\n"2046"\n"Memoirs of a Geisha"\n"荆轲刺秦王"\n"大红灯笼高高挂"\n"霸王别姬"\n"活着"\n"唐伯虎点秋香"\n"秋菊打官司"\n"菊豆"\n"Hong gao liang"\n"画魂"\n"风月"\n"Piao Liang Ma Ma"\n"The Hand"\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("p",[s._v("这里我们用到了FILTER关键词，可以对变量取值进行约束。")]),s._v(" "),n("p",[s._v("SPARQL更详细的语法和功能这里就不再多做介绍。读者可以参考W3C的"),n("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//www.w3.org/TR/rdf-sparql-query/",target:"_blank",rel:"noopener noreferrer"}},[s._v("文档"),n("OutboundLink")],1),s._v("或者SPARQL查询的"),n("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//www.w3.org/2009/Talks/0615-qbe/",target:"_blank",rel:"noopener noreferrer"}},[s._v("例子"),n("OutboundLink")],1),s._v("，也有专门的书来讲解SPARQL 1.1（Learning SPARQL: Querying and Updating with SPARQL 1.1）")]),s._v(" "),n("p",[n("strong",[s._v("开放世界假设：")])]),s._v(" "),n("p",[s._v("另外多提一点，关于知识图谱，有一个非常重要的概念，即开放世界假定（"),n("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//www.wikiwand.com/en/Open-world_assumption",target:"_blank",rel:"noopener noreferrer"}},[s._v("Open-world assumption，OWA"),n("OutboundLink")],1),s._v("）。这个假定的意思是当前没有陈述的事情是未知的，或者说知识图谱没有包含的信息是未知的。怎么理解？首先我们要承认知识图谱无法包含所有完整的信息。以我们这个电影数据的例子而言，很明显，它的数据十分残缺。即使我们拥有一个十分完整的电影知识图谱，包含了当下所有的电影、演员等信息，在现实世界中，信息也是动态变化和增长的。即，我们要承认知识图谱的信息本身就是残缺的。有了这个前提，我们来思考例子中的第二个SPARQL语句：")]),s._v(" "),n("p",[s._v("周星驰出演了上述查询结果中的电影。基于我们构建的电影知识图谱，提问：周星驰出演了《卧虎藏龙》吗？根据OWA，我们得到的答案是“不知道”，相反，如果是封闭世界假定（Closed-world assumption），我们得到的答案是“没有出演”。")]),s._v(" "),n("p",[s._v("我们在设计本体和开发相关应用的时候需要考虑开放世界假定。举个简单的例子，基于知识图谱的问答系统，用户提问“周星驰出演了《卧虎藏龙》吗？”，合适的回答是“不知道”而不是“没有出演”。直觉上这和一个人向另一个人提这个问题一样，如果我们知道问题答案，我们会给出肯定的回答，不知道的话，我们往往倾向于回复“我不知道”，“我不太清楚”，“我查查看”，而不是信誓旦旦地回答“没有出演”。毕竟，大多数人都有“自知之明”，知道自己总有不了解的东西。从这个角度上说，人和知识图谱类似，我们都存在于OWA的世界中。")]),s._v(" "),n("h4",{attrs:{id:"语法介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#语法介绍"}},[s._v("#")]),s._v(" 语法介绍：")]),s._v(" "),n("h2",{attrs:{id:"三、总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三、总结"}},[s._v("#")]),s._v(" 三、总结")]),s._v(" "),n("p",[s._v("本文主要介绍了RDF查询语言SPARQL及其基本用法，希望能让读者对SPARQL有个初步的认识。下一篇文章是实践篇，介绍如何利用D2RQ创建SPARQL endpoint并在我们的数据上进行相关查询。")]),s._v(" "),n("h2",{attrs:{id:"参考资料"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[s._v("#")]),s._v(" 参考资料")]),s._v(" "),n("ol",[n("li",[n("p",[n("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//www.cambridgesemantics.com/blog/semantic-university/learn-sparql/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Learn SPARQL - Cambridge Semantics"),n("OutboundLink")],1)])]),s._v(" "),n("li",[n("p",[n("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//www.w3.org/2009/Talks/0615-qbe/",target:"_blank",rel:"noopener noreferrer"}},[s._v("SPARQL By Example"),n("OutboundLink")],1)])]),s._v(" "),n("li",[n("p",[n("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//www.w3.org/TR/rdf-sparql-query/",target:"_blank",rel:"noopener noreferrer"}},[s._v("SPARQL Query Language for RDF"),n("OutboundLink")],1)])])])])}),[],!1,null,null,null);n.default=e.exports}}]);