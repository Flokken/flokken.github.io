(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{369:function(t,a,s){"use strict";s.r(a);var i=s(4),r=Object(i.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"引入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引入"}},[t._v("#")]),t._v(" 引入")]),t._v(" "),a("p",[t._v("之前学习的Network都是给定一些输入，然后经由网络处理后得到输出，但是现在需要把他当成一个Generator来使用")]),t._v(" "),a("img",{staticStyle:{zoom:"70%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20230705152241248.png"}}),t._v(" "),a("blockquote",[a("p",[t._v("解释一下就是每次输入x时，就从z中随机去一个simple distribution，然后经由网络，生成一个复杂的complex distribution，所以每次可以得到不一样的输出")])]),t._v(" "),a("h2",{attrs:{id:"介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),a("h3",{attrs:{id:"distribution"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#distribution"}},[t._v("#")]),t._v(" Distribution")]),t._v(" "),a("p",[t._v("翻译过来时分布，再上面那个例子中的作用是让机器对于同一个input可以有不同的输出，当我们需要网络看起来有创造力时，就需要这样么做")]),t._v(" "),a("img",{staticStyle:{zoom:"70%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20230705154102796.png"}}),t._v(" "),a("h3",{attrs:{id:"generative-adversarial-network-gan"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#generative-adversarial-network-gan"}},[t._v("#")]),t._v(" Generative Adversarial Network (GAN)")]),t._v(" "),a("h4",{attrs:{id:"unconditional-generation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unconditional-generation"}},[t._v("#")]),t._v(" Unconditional generation")]),t._v(" "),a("blockquote",[a("p",[t._v("Unconditional 就是输入的时候2没有X，同样的，有conditional 就是输入有x")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20230705154447289.png",alt:"image-20230705154447289"}})]),t._v(" "),a("h4",{attrs:{id:"discriminator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#discriminator"}},[t._v("#")]),t._v(" Discriminator")]),t._v(" "),a("p",[t._v("Discriminator（辨识器）是自己选的一个neural network，他用来辨别GAN的输出与真实的要的图片的不同。 比如输入是图像可以选择CNN来当discriminator")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20230705154659470.png",alt:"image-20230705154659470"}})]),t._v(" "),a("p",[t._v("假设现在要生成图片，第一代网络生成的是Generator V1只有黑白的轮廓,于是Discriminator V1那输出去对比真实图像，觉得不行，要有眼睛；于是Generator V1演化成Generator V2，但是Discriminator V1也变成V2(也是网络，也能进化)，这次呢他说要有嘴巴，而Generator V2生成的没有嘴巴；于是三代生成的有了嘴巴....就这样Discriminator让Generator的输出越来越逼近真实需要的输出")]),t._v(" "),a("blockquote",[a("p",[t._v("这也是"),a("strong",[t._v("adversarial")]),t._v("（对抗）这个意思的由来")])]),t._v(" "),a("img",{staticStyle:{zoom:"70%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20230705155012733.png"}}),t._v(" "),a("h4",{attrs:{id:"algorithm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#algorithm"}},[t._v("#")]),t._v(" Algorithm")]),t._v(" "),a("p",[t._v("1   固定G，训练D")]),t._v(" "),a("blockquote",[a("p",[t._v("固定的意思就是参数不变")])]),t._v(" "),a("p",[t._v("D代表discriminator，G代表Generator，我们输入D，让他去学习真实的图片和G输出的区别，而给G输入一个随机的vector。")]),t._v(" "),a("blockquote",[a("p",[t._v("具体来说，D可以当成分类的任务来做，比如让他把真实的图片标1，G生成的标0")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20230705160139028.png",alt:"image-20230705160139028"}})]),t._v(" "),a("p",[t._v("2 固定D，训练G")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20230705172241553.png",alt:"image-20230705172241553"}})]),t._v(" "),a("blockquote",[a("p",[t._v("训练方法当然还是和训练普通网络一样，减小损失函数")])]),t._v(" "),a("p",[t._v("3.反复执行1,2，效果会越来越好")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20230705172526715.png",alt:"image-20230705172526715"}})]),t._v(" "),a("p",[t._v("下面是训练5w次时的成果（用GAN生成动画人脸）")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20230705172616981.png",alt:"image-20230705172616981"}})]),t._v(" "),a("img",{attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20230705172616981.png"}}),t._v(" "),a("h2",{attrs:{id:"theory-behind-gan"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#theory-behind-gan"}},[t._v("#")]),t._v(" Theory behind GAN")]),t._v(" "),a("p",[t._v("概览一下GAN，其训练就是先输入一个Normal Distrbution，然后通过G生成"),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:"MJX-TEX"},[a("mjx-msub",[a("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[a("mjx-c",{attrs:{c:"P"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[a("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[a("mjx-c",{attrs:{c:"G"}})],1)],1)],1)],1)],1),t._v(","),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:"MJX-TEX"},[a("mjx-msub",[a("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[a("mjx-c",{attrs:{c:"P"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[a("mjx-TeXAtom",{attrs:{size:"s"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"d"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"a"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"t"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"a"}})],1)],1)],1)],1)],1)],1),t._v("指的是真实结果（就是想生成结果）的分布，"),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:"MJX-TEX"},[a("mjx-msub",[a("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[a("mjx-c",{attrs:{c:"P"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[a("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[a("mjx-c",{attrs:{c:"G"}})],1)],1)],1)],1)],1),t._v("和"),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:"MJX-TEX"},[a("mjx-msub",[a("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[a("mjx-c",{attrs:{c:"P"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[a("mjx-TeXAtom",{attrs:{size:"s"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"d"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"a"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"t"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"a"}})],1)],1)],1)],1)],1)],1),t._v("越接近，说明两者越想象。")],1),t._v(" "),a("p",[a("strong",[t._v("衡量两者相似度的参数叫Divergence")])]),t._v(" "),a("p",[t._v("可以通过减小损失函数让Divergence更小，这样两者也就更接近")]),t._v(" "),a("p",[a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:"MJX-TEX"},[a("mjx-msup",[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"G"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[a("mjx-mo",{staticClass:"mjx-n",attrs:{size:"s"}},[a("mjx-c",{attrs:{c:"2217"}})],1)],1)],1)],1)],1),t._v("最小就是GAN的训练目标")],1),t._v(" "),a("p",[a("img",{attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20230705213020598.png",alt:"image-20230705213020598"}})]),t._v(" "),a("h3",{attrs:{id:"怎么算divergence"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#怎么算divergence"}},[t._v("#")]),t._v(" 怎么算Divergence")]),t._v(" "),a("p",[t._v("GAN采用了一种方法，在只知道Sampling的情况下，就估算出了Divergence")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20230705213601567.png",alt:"image-20230705213601567"}})]),t._v(" "),a("p",[t._v("具体方法是通过Discriminator")]),t._v(" "),a("blockquote",[a("p",[t._v("Discriminator实际的作用就像一个Classifier")])]),t._v(" "),a("p",[t._v("假设"),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:"MJX-TEX"},[a("mjx-msup",[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"D"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[a("mjx-mo",{staticClass:"mjx-n",attrs:{size:"s"}},[a("mjx-c",{attrs:{c:"2217"}})],1)],1)],1)],1)],1),t._v("是Discriminator训练时的损失，他是跟Divergence有关的")],1),t._v(" "),a("img",{staticStyle:{zoom:"70%"},attrs:{src:"https://typora-1309665611.cos.ap-nanjing.myqcloud.com/typora/image-20230705214001763.png"}})])}),[],!1,null,null,null);a.default=r.exports}}]);